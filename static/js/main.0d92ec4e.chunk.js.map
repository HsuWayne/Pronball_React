{"version":3,"sources":["Components/WebNavbar.jsx","Components/PlayerListInput/InputPlayer/InputPitcher.jsx","Components/PlayerListInput/InputPlayer/InputPitcherFromDB.jsx","Components/PlayerListInput/InputPlayer/InputBatter.jsx","Components/PlayerListInput/InputPlayer/InputBatterFromDB.jsx","Components/PlayerListInput/InputPlayer/InputPlayer.jsx","Components/PlayerListInput/Player.js","store/slice/gameDataSlice.js","Components/PlayerListInput/InputPlayer/PlayerListFromDB.jsx","firebase.js","Components/PlayerListInput/InputPlayer/RegisterPlayer.jsx","Components/PlayerListInput/PlayerListInput.jsx","Components/Scoreboard/ScoreboardComponents/ScoreboardNav.jsx","Components/Scoreboard/ScoreboardComponents/ScoreboardGameInfo.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/BallsCountArea.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/InplayAreaComponent/GroundArea.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/InplayAreaComponent/FlyArea.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/InplayArea.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/PlayerAreaComponent/ChangePitcher.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/PlayerAreaComponent/ChangePitcherFromDB.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/PlayerAreaComponent/PitcherInfo.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/PlayerAreaComponent/BatterInfo.jsx","Components/Scoreboard/ScoreboardComponents/GameplayAreaComponent/PlayerArea.jsx","Components/Scoreboard/ScoreboardComponents/GamePlayArea.jsx","Components/Scoreboard/ScoreboardComponents/TeamInfoArea.jsx","Components/Scoreboard/ScoreboardComponents/GameResult/GameResultDisplay.jsx","Components/Scoreboard/ScoreboardComponents/GameResult/GameResult.jsx","Components/Scoreboard/Scoreboard.jsx","Components/PlayerDataDisplay/PitcherDataDisplay.jsx","Components/PlayerDataDisplay/SinglePitcherData.jsx","Components/PlayerDataDisplay/BatterDataDisplay.jsx","Components/PlayerDataDisplay/SingleBatterData.jsx","App.js","store/store.js","index.js"],"names":["WebNavbar","useState","dropDownActive","setDropDownActive","checkDropDownActive","e","target","pathname","Navbar","collapseOnSelect","expand","bg","variant","Container","to","Brand","className","Toggle","Collapse","id","Nav","Link","onClick","NavDropdown","title","active","Item","InputPitcher","props","team","pitcherList","setPitcherList","Row","Form","Group","as","Col","xs","controlId","Label","Control","value","pitcherSerialNum","onChange","type","min","max","step","required","Feedback","pitcherName","InputPitcherFromDB","gameData","useSelector","state","useEffect","playerListFromDB","serialNum","name","span","offset","md","Select","pitcher","find","player","map","index","InputBatters","batterList","setBatterList","battersNum","setBattersNum","handleBatterSerialNum","newBatterSerialNum","batter","batterSerialNum","orderNumber","handleBatterName","newBatterName","batterName","Array","parseInt","fill","battersList","i","push","InputBatterFromDB","newBatterList","handleBatterInput","batterIndex","findIndex","newBatter","batterNumSelect","length","defaultValue","InputPlayer","InputBatter","defaultPitcher","strike","ball","er","ira","k","o","goPit","aoPit","bbPit","dpPit","h","hr","defaultBatter","single","double","triple","homerun","rbi","runs","bb","so","go","ao","dp","sf","sh","gameDataSlice","createSlice","initialState","gameInning","currentInning","topInning","lastHalfCheck","gameEnd","homePoint","homePointList","awayPoint","awayPointList","out","runner","runnerBase","charge","pitching","batting","battingOrder","homePitchers","awayPitchers","homeBatters","awayBatters","homePlayerListFilter","awayPlayerListFilter","reducers","setGameInning","action","payload","updateHomePitchers","unshift","updateAwayPitchers","updateHomeBatters","updateAwayBatters","strikeBall","ballBall","foulBall","resetBallsCount","strikeout","walk","updateHit","groundOut","slice","shift","sacrificeHit","doublePlay","flyOut","sacrificeFly","updateScored","updateRunner","updateRunnerBase","updatePitcherEr","updatePitcherIra","updateRunnerRuns","updateBatterRbi","setCharge","changePitcher","changeBatter","halfInningHandle","setGameEnd","setGameStart","pointing","pointingList","updatePlayerListFromDB","actions","PlayerListFromDB","playerListFromDBShow","setPlayerListFromDBShow","Modal","show","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","Alert","Table","striped","bordered","Footer","Button","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","measurementId","app","initializeApp","db","getFirestore","playersFromDB","collection","RegisterPlayer","registerPlayerShow","setRegisterPlayerShow","dispatch","useDispatch","validated","setValidated","newPlayer","setNewPlayer","registerOK","setRegisterOK","registerFail","setRegisterFail","registerPlayer","a","setDoc","doc","serialNumber","gamePlayed","then","getFirebasePlayer","catch","handleRegister","checkPlayerName","useCallback","playerList","getDocs","query","orderBy","forEach","data","gettingFirebasePlayer","fluid","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","onFocus","PlayerListInput","homePitcherList","setHomePitcherList","awayPitcherList","setAwayPitcherList","homeBatterList","setHomeBatterList","awayBatterList","setAwayBatterList","handlePlayerList","setPlayerListSubmitted","order","Stack","direction","ScoreboardNav","ScoreboardGameInfo","strikeCount","ballCount","outCount","gap","icon","faCaretUp","faCaretDown","BallsCountArea","handleBall","reverse","GroundArea","groundAreaShow","setGroundAreaShow","groundToRight","element","array","pop","FlyArea","flyAreaShow","setFlyAreaShow","flyToRight","handleHit","InplayArea","setGroundToRight","setFlyToRight","base","runnerToHome","filter","splice","handleGroundOut","ChangePitcher","changePitching","setChangePitching","ChangePitcherFromDB","PitcherInfo","pitcherShow","setPitcherShow","pitchingOrder","disabled","BatterInfo","batterShow","setBatterShow","sort","b","PlayerArea","GamePlayArea","TeamInfoArea","GameResultDisplay","showGameResult","setShowGameResult","handleGameResultUpdate","totalInning","awayResult","awayHitsTotal","homeResult","homeHitsTotal","fullscreen","Tab","defaultActiveKey","eventKey","Content","Pane","GameResult","allPitchers","allBatters","updatePlayerData","alreadyExistPitcher","noRegisterPitcher","arr","registerPitcher","alreadyExistBatter","noRegisterBatter","registerBatter","updatePlayerToFirebase","queryPlayer","updateDoc","window","location","reload","Scoreboard","PitcherDataDisplay","setPlayerList","Math","round","SinglePitcherData","singlePitcher","setSinglePitcher","params","useParams","docRef","pitcherId","getDoc","gettingPitcher","BatterDataDisplay","SingleBatterData","singleBatter","setSingleBatter","batterId","gettingBatter","App","playerListSubmitted","path","style","padding","configureStore","reducer","gameDataReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0d92ec4e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Navbar, Container, NavDropdown, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./WebNavbar.css\";\n\nconst WebNavbar = () => {\n  const [dropDownActive, setDropDownActive] = useState(false);\n  const checkDropDownActive = (e) => {\n    if (\n      e.target.pathname === \"/Pronball_React/pitcher\" ||\n      e.target.pathname === \"/Pronball_React/batter\"\n    ) {\n      setDropDownActive(true);\n    } else setDropDownActive(false);\n  };\n  return (\n    <Navbar collapseOnSelect expand=\"sm\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <LinkContainer to=\"/Pronball_React/\">\n          <Navbar.Brand>\n            <div className=\"navbar-logo d-inline-block justify-content-end\"></div>\n            <span>乒乓棒球</span>\n          </Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            <LinkContainer to=\"/Pronball_React/\">\n              <Nav.Link className=\"text-center\" onClick={checkDropDownActive}>\n                計分板\n              </Nav.Link>\n            </LinkContainer>\n            <NavDropdown\n              className=\"text-center\"\n              title=\"統計數據\"\n              id=\"collasible-nav-dropdown\"\n              onClick={checkDropDownActive}\n              active={dropDownActive}\n            >\n              <LinkContainer to=\"/Pronball_React/pitcher\">\n                <NavDropdown.Item>投手數據</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/Pronball_React/batter\">\n                <NavDropdown.Item>打者數據</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default WebNavbar;\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nconst InputPitcher = (props) => {\n  let { team, pitcherList, setPitcherList } = props;\n\n  return (\n    <Row className=\"mb-3\">\n      <Form.Group as={Col} xs=\"4\" controlId={team + \"PitcherSerialNum\"}>\n        <Form.Label>背號(0~99)</Form.Label>\n        <Form.Control\n          value={pitcherList.pitcherSerialNum}\n          onChange={(e) =>\n            setPitcherList({ ...pitcherList, pitcherSerialNum: e.target.value })\n          }\n          type=\"number\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          請填寫 0 ~ 99 的正整數\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group as={Col} xs=\"8\" controlId={team + \"PitcherName\"}>\n        <Form.Label>\n          {team === \"home\" ? \"主隊先發投手姓名\" : \"客隊先發投手姓名\"}\n        </Form.Label>\n        <Form.Control\n          value={pitcherList.pitcherName}\n          onChange={(e) =>\n            setPitcherList({ ...pitcherList, pitcherName: e.target.value })\n          }\n          type=\"text\"\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {team === \"home\"\n            ? \"請填寫主隊先發投手姓名\"\n            : \"請填寫客隊先發投手姓名\"}\n        </Form.Control.Feedback>\n      </Form.Group>\n    </Row>\n  );\n};\n\nexport default InputPitcher;\n","import React, { useEffect } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nconst InputPitcherFromDB = (props) => {\n  const { team, setPitcherList } = props;\n  const gameData = useSelector((state) => state.gameData);\n\n  useEffect(() => {\n    setPitcherList({\n      pitcherSerialNum: gameData.playerListFromDB[0].serialNum,\n      pitcherName: gameData.playerListFromDB[0].name,\n    });\n  }, [setPitcherList, gameData.playerListFromDB]);\n\n  const handlePitcherInput = (e) => {\n    const pitcher = gameData.playerListFromDB.find(\n      (player) => player.name === e.target.value\n    );\n    setPitcherList({\n      pitcherSerialNum: pitcher.serialNum,\n      pitcherName: pitcher.name,\n    });\n  };\n\n  return (\n    <Row className=\"mb-3\">\n      <Form.Group\n        as={Col}\n        xs={{ span: 10, offset: 1 }}\n        md={{ span: 6, offset: 3 }}\n        controlId=\"selectPlayer\"\n      >\n        <Form.Label>\n          {team === \"home\" ? \"選擇主隊先發投手\" : \"選擇客隊先發投手\"}\n        </Form.Label>\n        <Form.Select\n          aria-label=\"Pitcher player select list\"\n          required\n          onChange={handlePitcherInput}\n        >\n          {gameData.playerListFromDB.map((player, index) => {\n            return (\n              <option key={\"player\" + index} value={player.name}>\n                {\"( \" + player.serialNum + \" ) \" + player.name}\n              </option>\n            );\n          })}\n        </Form.Select>\n      </Form.Group>\n    </Row>\n  );\n};\n\nexport default InputPitcherFromDB;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nconst InputBatters = (props) => {\n  let { team, batterList, setBatterList } = props;\n\n  const [battersNum, setBattersNum] = useState(\"1\");\n\n  const handleBattersNum = (e) => {\n    setBattersNum(e.target.value);\n  };\n\n  const handleBatterSerialNum = (e) => {\n    const newBatterSerialNum = batterList.map((batter, index) => {\n      if (e.target.id === team + \"BatterSerialNum\" + (index + 1)) {\n        return {\n          ...batter,\n          batterSerialNum: e.target.value,\n          orderNumber: index + 1,\n        };\n      }\n      return batter;\n    });\n    setBatterList(newBatterSerialNum);\n  };\n\n  const handleBatterName = (e) => {\n    const newBatterName = batterList.map((batter, index) => {\n      if (e.target.id === team + \"BatterName\" + (index + 1)) {\n        return { ...batter, batterName: e.target.value };\n      }\n      return batter;\n    });\n    setBatterList(newBatterName);\n  };\n\n  useEffect(() => {\n    setBatterList(\n      Array(parseInt(battersNum)).fill({\n        batterSerialNum: \"\",\n        batterName: \"\",\n        orderNumber: \"\",\n      })\n    );\n  }, [setBatterList, battersNum]);\n\n  const inputBattersNum = (\n    <Row className=\"mb-3\" key={team + \"InputBattersNum\"}>\n      <Form.Group as={Col} xs=\"6\" controlId={team + \"BattersNum\"}>\n        <Form.Label>\n          {team === \"home\" ? \"主隊打者人數\" : \"客隊打者人數\"}\n        </Form.Label>\n        <Form.Select\n          value={battersNum}\n          onChange={handleBattersNum}\n          aria-label={team + \"BattersNum\"}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n        </Form.Select>\n      </Form.Group>\n    </Row>\n  );\n\n  const battersListLabel = (\n    <Row key={team + \"batterListLabel\"}>\n      <Form.Label as={Col} xs=\"4\">\n        背號(0~99)\n      </Form.Label>\n      <Form.Label as={Col} xs=\"8\">\n        {team === \"home\" ? \"主隊打者姓名\" : \"客隊打者姓名\"}\n      </Form.Label>\n    </Row>\n  );\n\n  const battersList = [inputBattersNum, battersListLabel];\n  for (let i = 1; i <= battersNum; i++) {\n    battersList.push(\n      <Row className=\"mb-3\" key={i}>\n        <Form.Group as={Col} xs=\"4\" controlId={team + \"BatterSerialNum\" + i}>\n          <Form.Label>{i}棒</Form.Label>\n          <Form.Control\n            onChange={handleBatterSerialNum}\n            type=\"number\"\n            min=\"0\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            請填寫 0 ~ 99 的正整數\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} xs=\"8\" controlId={team + \"BatterName\" + i}>\n          <Form.Label>姓名</Form.Label>\n          <Form.Control onChange={handleBatterName} type=\"text\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            請填寫打者姓名\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    );\n  }\n  return <>{battersList}</>;\n};\n\nexport default InputBatters;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nconst InputBatterFromDB = (props) => {\n  let { team, batterList, setBatterList } = props;\n  const gameData = useSelector((state) => state.gameData);\n\n  const [battersNum, setBattersNum] = useState(\"1\");\n\n  useEffect(() => {\n    const newBatterList = [];\n    for (let i = 1; i <= battersNum; i++) {\n      newBatterList.push({\n        batterSerialNum: gameData.playerListFromDB[i - 1].serialNum,\n        batterName: gameData.playerListFromDB[i - 1].name,\n        orderNumber: i,\n      });\n    }\n    setBatterList(newBatterList);\n  }, [setBatterList, battersNum, gameData.playerListFromDB]);\n\n  const handleBatterInput = (e) => {\n    const batterIndex = gameData.playerListFromDB.findIndex(\n      (player) => player.name === e.target.value\n    );\n    const newBatter = batterList.map((batter, index) => {\n      if (e.target.id === team + \"Batter\" + (index + 1)) {\n        return {\n          batterName: gameData.playerListFromDB[batterIndex].name,\n          batterSerialNum: gameData.playerListFromDB[batterIndex].serialNum,\n          orderNumber: index + 1,\n        };\n      }\n      return batter;\n    });\n\n    setBatterList(newBatter);\n  };\n\n  const batterNumSelect = [];\n  for (let i = 1; i <= gameData.playerListFromDB.length; i++) {\n    if (i <= 9) {\n      batterNumSelect.push(\n        <option key={\"player\" + i} value={i}>\n          {i}\n        </option>\n      );\n    }\n  }\n\n  const inputBattersNum = (\n    <Row className=\"mb-3\" key={team + \"InputBattersNum\"}>\n      <Form.Group\n        as={Col}\n        xs={{ span: 10, offset: 1 }}\n        md={{ span: 6, offset: 3 }}\n        controlId={team + \"BattersNum\"}\n      >\n        <Form.Label>\n          {team === \"home\" ? \"主隊打者人數\" : \"客隊打者人數\"}\n        </Form.Label>\n        <Form.Select\n          value={battersNum}\n          onChange={(e) => {\n            setBattersNum(e.target.value);\n          }}\n          aria-label={team + \"BattersNum\"}\n        >\n          {batterNumSelect}\n        </Form.Select>\n      </Form.Group>\n    </Row>\n  );\n\n  const battersListLabel = (\n    <Row key={team + \"batterListLabel\"}>\n      <Form.Label\n        as={Col}\n        xs={{ span: 10, offset: 1 }}\n        md={{ span: 6, offset: 3 }}\n      >\n        {team === \"home\" ? \"選擇主隊打者\" : \"選擇客隊打者\"}\n      </Form.Label>\n    </Row>\n  );\n\n  const battersList = [inputBattersNum, battersListLabel];\n  for (let i = 1; i <= battersNum; i++) {\n    battersList.push(\n      <Row className=\"mb-3\" key={i}>\n        <Form.Group\n          as={Col}\n          xs={{ span: 10, offset: 1 }}\n          md={{ span: 6, offset: 3 }}\n          controlId={team + \"Batter\" + i}\n        >\n          <Form.Label>{i}棒</Form.Label>\n          <Form.Select\n            aria-label=\"Batter player select list\"\n            required\n            onChange={handleBatterInput}\n            defaultValue={gameData.playerListFromDB[i - 1].name}\n          >\n            {gameData.playerListFromDB.map((player, index) => {\n              return (\n                <option key={\"player\" + index} value={player.name}>\n                  {\"( \" + player.serialNum + \" ) \" + player.name}\n                </option>\n              );\n            })}\n          </Form.Select>\n        </Form.Group>\n      </Row>\n    );\n  }\n  return <>{battersList}</>;\n};\n\nexport default InputBatterFromDB;\n","import React from \"react\";\nimport InputPitcher from \"./InputPitcher\";\nimport InputPitcherFromDB from \"./InputPitcherFromDB\";\nimport InputBatter from \"./InputBatter\";\nimport InputBatterFromDB from \"./InputBatterFromDB\";\nimport { useSelector } from \"react-redux\";\n\nfunction InputPlayer(props) {\n  const {\n    team,\n    pitcherList,\n    batterList,\n    setPitcherList,\n    setBatterList,\n  } = props;\n\n  const gameData = useSelector((state) => state.gameData);\n\n  return (\n    <>\n      <div className=\"form_subtitle\">\n        {team === \"home\" ? \"登錄主隊球員資訊\" : \"登錄客隊球員資訊\"}\n      </div>\n      {gameData.playerListFromDB.length === 0 ? (\n        <>\n          <InputPitcher\n            team={team}\n            setPitcherList={setPitcherList}\n            pitcherList={pitcherList}\n          />\n          <InputBatter\n            team={team}\n            setBatterList={setBatterList}\n            batterList={batterList}\n          />\n        </>\n      ) : (\n        <>\n          <InputPitcherFromDB team={team} setPitcherList={setPitcherList} />\n          <InputBatterFromDB\n            team={team}\n            setBatterList={setBatterList}\n            batterList={batterList}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default InputPlayer;\n","export const defaultPitcher = {\n  serialNum: \"\",\n  name: \"\",\n  strike: 0,\n  ball: 0,\n  er: 0,\n  ira: 0,\n  k: 0,\n  o: 0,\n  goPit: 0,\n  aoPit: 0,\n  bbPit: 0,\n  dpPit: 0,\n  h: 0,\n  hr: 0,\n};\n\nexport const defaultBatter = {\n  serialNum: \"\",\n  name: \"\",\n  orderNumber: \"\",\n  single: 0,\n  double: 0,\n  triple: 0,\n  homerun: 0,\n  rbi: 0,\n  runs: 0,\n  bb: 0,\n  so: 0,\n  go: 0,\n  ao: 0,\n  dp: 0,\n  sf: 0,\n  sh: 0,\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const gameDataSlice = createSlice({\n  name: \"gameData\",\n  initialState: {\n    gameInning: 9, //總局數\n    currentInning: 0,\n    topInning: true,\n    lastHalfCheck: false,\n    gameEnd: false,\n    homePoint: 0,\n    homePointList: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    awayPoint: 0,\n    awayPointList: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    strike: 0,\n    ball: 0,\n    out: 0,\n    runner: [], //跑者\n    runnerBase: [], //跑者所在壘包\n    charge: false, //趨前守備\n    pitching: [], //目前投手\n    batting: [], //目前打者\n    battingOrder: [], //目前打序\n    homePitchers: [],\n    awayPitchers: [],\n    homeBatters: [],\n    awayBatters: [],\n    playerListFromDB: [],\n    homePlayerListFilter: [],\n    awayPlayerListFilter: [],\n  },\n\n  reducers: {\n    setGameInning: (state, action) => {\n      state.gameInning = parseInt(action.payload);\n      state.homePointList = Array(state.gameInning).fill(0);\n      state.awayPointList = Array(state.gameInning).fill(0);\n    },\n    updateHomePitchers: (state, action) => {\n      state.homePitchers.unshift(action.payload);\n    },\n    updateAwayPitchers: (state, action) => {\n      state.awayPitchers.unshift(action.payload);\n    },\n    updateHomeBatters: (state, action) => {\n      state.homeBatters = action.payload;\n    },\n    updateAwayBatters: (state, action) => {\n      state.awayBatters = action.payload;\n    },\n    strikeBall: (state) => {\n      state.strike++;\n      state.pitching[0].strike++;\n    },\n    ballBall: (state) => {\n      state.ball++;\n      state.pitching[0].ball++;\n    },\n    foulBall: (state) => {\n      state.pitching[0].strike++;\n    },\n    resetBallsCount: (state) => {\n      state.strike = 0;\n      state.ball = 0;\n    },\n    strikeout: (state) => {\n      state.out++;\n      state.pitching[0].k++;\n      state.pitching[0].o++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).so++;\n    },\n    walk: (state) => {\n      state.pitching[0].bbPit++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).bb++;\n    },\n    updateHit: (state, action) => {\n      state.pitching[0].h++;\n      state.pitching[0].strike++;\n      if (action.payload === 1) {\n        state.battingOrder.find(\n          (o) => o.orderNumber === state.batting[0].orderNumber\n        ).single++;\n      } else if (action.payload === 2) {\n        state.battingOrder.find(\n          (o) => o.orderNumber === state.batting[0].orderNumber\n        ).double++;\n      } else if (action.payload === 3) {\n        state.battingOrder.find(\n          (o) => o.orderNumber === state.batting[0].orderNumber\n        ).triple++;\n      } else {\n        state.battingOrder.find(\n          (o) => o.orderNumber === state.batting[0].orderNumber\n        ).homerun++;\n        state.pitching[0].hr++;\n      }\n    },\n    groundOut: (state) => {\n      state.out++;\n      state.pitching[0].o++;\n      state.pitching[0].strike++;\n      state.pitching[0].goPit++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).go++;\n      if (state.out <= 2) {\n        state.batting = state.battingOrder.slice(0, 1);\n        state.battingOrder.push(state.battingOrder.shift());\n        state.charge = false;\n      }\n    },\n    sacrificeHit: (state) => {\n      state.out++;\n      state.pitching[0].o++;\n      state.pitching[0].strike++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).sh++;\n    },\n    doublePlay: (state) => {\n      state.out++;\n      state.pitching[0].o++;\n      state.pitching[0].dpPit++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).dp++;\n    },\n    flyOut: (state) => {\n      state.out++;\n      state.pitching[0].o++;\n      state.pitching[0].strike++;\n      state.pitching[0].aoPit++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).ao++;\n      if (state.out <= 2) {\n        state.batting = state.battingOrder.slice(0, 1);\n        state.battingOrder.push(state.battingOrder.shift());\n        state.charge = false;\n      }\n    },\n    sacrificeFly: (state) => {\n      state.out++;\n      state.pitching[0].o++;\n      state.pitching[0].strike++;\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).sf++;\n    },\n    updateScored: (state) => {\n      if (state.topInning) {\n        state.awayPoint++;\n        state.awayPointList[state.currentInning - 1]++;\n      } else {\n        state.homePoint++;\n        state.homePointList[state.currentInning - 1]++;\n      }\n    },\n    updateRunner: (state, action) => {\n      state.runner = action.payload;\n    },\n    updateRunnerBase: (state, action) => {\n      state.runnerBase = action.payload;\n    },\n    updatePitcherEr: (state, action) => {\n      state.pitching.find((o) => o.name === action.payload).er++;\n    },\n    updatePitcherIra: (state) => {\n      state.pitching[0].ira++;\n    },\n    updateRunnerRuns: (state, action) => {\n      state.battingOrder.find((o) => o.orderNumber === action.payload).runs++;\n    },\n    updateBatterRbi: (state) => {\n      state.battingOrder.find(\n        (o) => o.orderNumber === state.batting[0].orderNumber\n      ).rbi++;\n    },\n    setCharge: (state) => {\n      state.charge = !state.charge;\n    },\n    changePitcher: (state, action) => {\n      state.pitching.unshift(action.payload);\n    },\n    changeBatter: (state) => {\n      state.batting = state.battingOrder.slice(0, 1);\n      state.battingOrder.push(state.battingOrder.shift());\n      state.charge = false;\n    },\n    halfInningHandle: (state) => {\n      if (state.lastHalfCheck) {\n        if (state.homePoint < state.awayPoint) {\n          state.awayPitchers = state.pitching;\n          state.homeBatters = state.battingOrder;\n          state.gameEnd = true;\n        } else {\n          state.lastHalfCheck = false;\n          state.homePointList.push(\"0\");\n          state.awayPointList.push(\"0\");\n          state.gameInning++;\n        }\n      }\n      if (state.currentInning === state.gameInning && state.topInning) {\n        if (state.homePoint > state.awayPoint) {\n          state.homePointList[state.homePointList.length - 1] = \"-\";\n          state.homePitchers = state.pitching;\n          state.awayBatters = state.battingOrder;\n          state.gameEnd = true;\n        }\n      }\n      state.out = 0;\n      state.runner = [];\n      state.runnerBase = [];\n      state.charge = false;\n      if (state.topInning) {\n        state.homePitchers = state.pitching;\n        state.awayBatters = state.battingOrder;\n        state.pitching = state.awayPitchers;\n        state.battingOrder = state.homeBatters;\n      } else {\n        state.currentInning++;\n        state.awayPitchers = state.pitching;\n        state.homeBatters = state.battingOrder;\n        state.pitching = state.homePitchers;\n        state.battingOrder = state.awayBatters;\n      }\n      state.topInning = !state.topInning;\n      if (state.currentInning === state.gameInning && !state.topInning) {\n        state.lastHalfCheck = true;\n      }\n      state.batting = state.battingOrder.slice(0, 1);\n      state.battingOrder.push(state.battingOrder.shift());\n    },\n    setGameEnd: (state) => {\n      state.awayPitchers = state.pitching;\n      state.homeBatters = state.battingOrder;\n      state.gameEnd = true;\n    },\n    setGameStart: (state) => {\n      state.currentInning++;\n      state.pitching = state.homePitchers;\n      state.battingOrder = state.awayBatters;\n      state.pointing = state.awayPoint;\n      state.pointingList = state.awayPointList;\n      state.batting = state.battingOrder.slice(0, 1);\n      state.battingOrder.push(state.battingOrder.shift());\n    },\n    //Firebase資料處理\n    updatePlayerListFromDB: (state, action) => {\n      state.playerListFromDB = action.payload;\n    },\n  },\n});\n\nexport const {\n  setGameInning,\n  updateHomePitchers,\n  updateAwayPitchers,\n  updateHomeBatters,\n  updateAwayBatters,\n  strikeBall,\n  ballBall,\n  foulBall,\n  resetBallsCount,\n  strikeout,\n  walk,\n  updateHit,\n  groundOut,\n  sacrificeHit,\n  doublePlay,\n  flyOut,\n  sacrificeFly,\n  updateScored,\n  updateRunner,\n  updateRunnerBase,\n  updatePitcherEr,\n  updatePitcherIra,\n  updateRunnerRuns,\n  updateBatterRbi,\n  setCharge,\n  changePitcher,\n  changeBatter,\n  halfInningHandle,\n  setGameEnd,\n  setGameStart,\n  updatePlayerListFromDB,\n} = gameDataSlice.actions;\n\nexport default gameDataSlice.reducer;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Modal, Button, Table, Alert } from \"react-bootstrap\";\n\nfunction PlayerListFromDB(props) {\n  const { playerListFromDBShow, setPlayerListFromDBShow } = props;\n\n  const gameData = useSelector((state) => state.gameData);\n\n  return (\n    <Modal\n      show={playerListFromDBShow}\n      onHide={() => setPlayerListFromDBShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>已註冊球員名單</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {gameData.playerListFromDB.length === 0 ? (\n          <Alert variant=\"danger\" className=\"text-center\">\n            載入球員名單失敗\n          </Alert>\n        ) : (\n          <Table striped bordered>\n            <thead>\n              <tr>\n                <th>背號</th>\n                <th>姓名</th>\n              </tr>\n            </thead>\n            <tbody>\n              {gameData.playerListFromDB.map((player, index) => {\n                return (\n                  <tr key={\"player\" + index}>\n                    <td>{player.serialNum}</td>\n                    <td>{player.name}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => setPlayerListFromDBShow(false)}\n        >\n          關閉\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default PlayerListFromDB;\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nconst playersFromDB = collection(db, \"Players\");\n\nexport default playersFromDB;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Modal,\n  Button,\n  Container,\n  Row,\n  Col,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport { doc, setDoc, getDocs, orderBy, query } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePlayerListFromDB } from \"../../../store/slice/gameDataSlice\";\nimport playersFromDB from \"../../../firebase\";\n\nfunction RegisterPlayer(props) {\n  const { registerPlayerShow, setRegisterPlayerShow } = props;\n  const gameData = useSelector((state) => state.gameData);\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [newPlayer, setNewPlayer] = useState({\n    serialNum: \"\",\n    name: \"\",\n  });\n  const [registerOK, setRegisterOK] = useState(false);\n  const [registerFail, setRegisterFail] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    if (form.checkValidity() === true) {\n      handleRegister(newPlayer.name, newPlayer.serialNum);\n      setNewPlayer({\n        serialNum: \"\",\n        name: \"\",\n      });\n      setValidated(false);\n    }\n  };\n\n  const registerPlayer = async (name, serialNum) => {\n    await setDoc(doc(playersFromDB, name), {\n      serialNumber: serialNum,\n      pitcher: {\n        strike: 0,\n        ball: 0,\n        er: 0,\n        ira: 0,\n        k: 0,\n        o: 0,\n        goPit: 0,\n        aoPit: 0,\n        bbPit: 0,\n        dpPit: 0,\n        h: 0,\n        hr: 0,\n        gamePlayed: 0,\n      },\n      batter: {\n        single: 0,\n        double: 0,\n        triple: 0,\n        homerun: 0,\n        rbi: 0,\n        runs: 0,\n        bb: 0,\n        so: 0,\n        go: 0,\n        ao: 0,\n        dp: 0,\n        sf: 0,\n        sh: 0,\n        gamePlayed: 0,\n      },\n    })\n      .then(() => {\n        setRegisterOK(true);\n        getFirebasePlayer();\n      })\n      .catch(() => setRegisterFail(true));\n  };\n\n  const handleRegister = (name, serialNum) => {\n    let checkPlayerName = true;\n    for (let player of gameData.playerListFromDB) {\n      if (player.name === name) {\n        checkPlayerName = false;\n        setRegisterFail(true);\n      }\n    }\n    if (checkPlayerName) {\n      registerPlayer(name, serialNum);\n    }\n  };\n\n  const getFirebasePlayer = useCallback(() => {\n    async function gettingFirebasePlayer() {\n      const playerList = [];\n      const queryPlayer = await getDocs(\n        query(playersFromDB, orderBy(\"serialNumber\"))\n      );\n      queryPlayer.forEach((player) => {\n        playerList.push({\n          name: player.id,\n          serialNum: player.data().serialNumber,\n        });\n      });\n      dispatch(updatePlayerListFromDB(playerList));\n    }\n    gettingFirebasePlayer();\n  }, [dispatch]);\n\n  return (\n    <Modal\n      show={registerPlayerShow}\n      onHide={() => {\n        setRegisterPlayerShow(false);\n        setRegisterOK(false);\n        setRegisterFail(false);\n        setValidated(false);\n        setNewPlayer({\n          serialNum: \"\",\n          name: \"\",\n        });\n      }}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>註冊新球員</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container fluid>\n          <Form\n            className=\"playerForm\"\n            noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <div className=\"playerForm_subtitle\">輸入球員資訊</div>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} xs=\"4\" controlId={\"newPlayerSerialNum\"}>\n                <Form.Label>背號(0~99)</Form.Label>\n                <Form.Control\n                  value={newPlayer.serialNum}\n                  onFocus={() => {\n                    setRegisterOK(false);\n                    setRegisterFail(false);\n                  }}\n                  onChange={(e) =>\n                    setNewPlayer({\n                      ...newPlayer,\n                      serialNum: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"99\"\n                  step=\"1\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  請填寫 0 ~ 99 的正整數\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} xs=\"8\" controlId={\"newPlayerName\"}>\n                <Form.Label>姓名</Form.Label>\n                <Form.Control\n                  value={newPlayer.name}\n                  onFocus={() => {\n                    setRegisterOK(false);\n                    setRegisterFail(false);\n                  }}\n                  onChange={(e) =>\n                    setNewPlayer({\n                      ...newPlayer,\n                      name: e.target.value,\n                    })\n                  }\n                  type=\"text\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  請填寫姓名\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Row>\n            {registerOK ? (\n              <Alert variant=\"success\" className=\"text-center\">\n                註冊成功\n              </Alert>\n            ) : null}\n            {registerFail ? (\n              <Alert variant=\"danger\" className=\"text-center\">\n                註冊失敗\n              </Alert>\n            ) : null}\n            <Modal.Footer>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  setRegisterPlayerShow(false);\n                  setRegisterOK(false);\n                  setRegisterFail(false);\n                  setValidated(false);\n                  setNewPlayer({\n                    serialNum: \"\",\n                    name: \"\",\n                  });\n                }}\n              >\n                關閉\n              </Button>\n              <Button variant=\"primary\" type=\"submit\">\n                送出\n              </Button>\n            </Modal.Footer>\n          </Form>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default RegisterPlayer;\n","import { Container, Form, Row, Col, Button, Stack } from \"react-bootstrap\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./PlayerListInput.css\";\nimport InputPlayer from \"./InputPlayer/InputPlayer\";\nimport { defaultPitcher, defaultBatter } from \"./Player\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setGameInning,\n  updateHomePitchers,\n  updateAwayPitchers,\n  updateHomeBatters,\n  updateAwayBatters,\n  setGameStart,\n  updatePlayerListFromDB,\n} from \"../../store/slice/gameDataSlice\";\nimport { getDocs, orderBy, query } from \"firebase/firestore\";\nimport PlayerListFromDB from \"./InputPlayer/PlayerListFromDB\";\nimport RegisterPlayer from \"./InputPlayer/RegisterPlayer\";\nimport playersFromDB from \"../../firebase\";\n\nfunction PlayerListInput(props) {\n  const [validated, setValidated] = useState(false);\n\n  const [homePitcherList, setHomePitcherList] = useState({\n    pitcherSerialNum: \"\",\n    pitcherName: \"\",\n  });\n  const [awayPitcherList, setAwayPitcherList] = useState({\n    pitcherSerialNum: \"\",\n    pitcherName: \"\",\n  });\n  const [homeBatterList, setHomeBatterList] = useState([\n    {\n      batterSerialNum: \"\",\n      batterName: \"\",\n      orderNumber: \"\",\n    },\n  ]);\n  const [awayBatterList, setAwayBatterList] = useState([\n    {\n      batterSerialNum: \"\",\n      batterName: \"\",\n      orderNumber: \"\",\n    },\n  ]);\n  const dispatch = useDispatch();\n\n  const [playerListFromDBShow, setPlayerListFromDBShow] = useState(false);\n  const [registerPlayerShow, setRegisterPlayerShow] = useState(false);\n\n  const getFirebasePlayer = useCallback(() => {\n    async function gettingFirebasePlayer() {\n      const playerList = [];\n      const queryPlayer = await getDocs(\n        query(playersFromDB, orderBy(\"serialNumber\"))\n      );\n      queryPlayer.forEach((player) => {\n        playerList.push({\n          name: player.id,\n          serialNum: player.data().serialNumber,\n        });\n      });\n      dispatch(updatePlayerListFromDB(playerList));\n    }\n    gettingFirebasePlayer();\n  }, [dispatch]);\n\n  useEffect(() => getFirebasePlayer(), [getFirebasePlayer]);\n\n  const handlePlayerList = () => {\n    dispatch(\n      updateHomePitchers({\n        ...defaultPitcher,\n        serialNum: homePitcherList.pitcherSerialNum,\n        name: homePitcherList.pitcherName,\n      })\n    );\n    dispatch(\n      updateAwayPitchers({\n        ...defaultPitcher,\n        serialNum: awayPitcherList.pitcherSerialNum,\n        name: awayPitcherList.pitcherName,\n      })\n    );\n    const homeBatters = homeBatterList.map((batter) => {\n      return {\n        ...defaultBatter,\n        serialNum: batter.batterSerialNum,\n        name: batter.batterName,\n        orderNumber: batter.orderNumber,\n      };\n    });\n    dispatch(updateHomeBatters(homeBatters));\n    const awayBatters = awayBatterList.map((batter) => {\n      return {\n        ...defaultBatter,\n        serialNum: batter.batterSerialNum,\n        name: batter.batterName,\n        orderNumber: batter.orderNumber,\n      };\n    });\n    dispatch(updateAwayBatters(awayBatters));\n    dispatch(setGameStart());\n  };\n\n  const handleTestData = () => {\n    dispatch(setGameInning(3));\n    dispatch(\n      updateHomePitchers({ ...defaultPitcher, serialNum: \"04\", name: \"趙主投\" })\n    );\n    dispatch(\n      updateAwayPitchers({ ...defaultPitcher, serialNum: \"24\", name: \"周客投\" })\n    );\n\n    dispatch(\n      updateHomeBatters([\n        { ...defaultBatter, orderNumber: \"1\", serialNum: \"01\", name: \"錢主一\" },\n        { ...defaultBatter, orderNumber: \"2\", serialNum: \"02\", name: \"孫主二\" },\n        { ...defaultBatter, orderNumber: \"3\", serialNum: \"03\", name: \"李主三\" },\n      ])\n    );\n\n    dispatch(\n      updateAwayBatters([\n        { ...defaultBatter, orderNumber: \"1\", serialNum: \"21\", name: \"吳客一\" },\n        { ...defaultBatter, orderNumber: \"2\", serialNum: \"22\", name: \"鄭客二\" },\n        { ...defaultBatter, orderNumber: \"3\", serialNum: \"23\", name: \"王客三\" },\n      ])\n    );\n    dispatch(setGameStart());\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    if (form.checkValidity() === true) {\n      handlePlayerList();\n      props.setPlayerListSubmitted(true);\n    }\n    setValidated(true);\n  };\n\n  return (\n    <div className=\"scoreboard_form\">\n      <Container>\n        <div className=\"form_title\">比賽及選手資訊登錄</div>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Row>\n            <Col as={Row} xs={6} md={12}>\n              <Col xs={{ span: 11, offset: 1 }} md={3} className=\"mb-3\">\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => setPlayerListFromDBShow(true)}\n                >\n                  已註冊球員名單\n                </Button>\n                <PlayerListFromDB\n                  playerListFromDBShow={playerListFromDBShow}\n                  setPlayerListFromDBShow={setPlayerListFromDBShow}\n                />\n              </Col>\n              <Col xs={{ span: 11, offset: 1 }} md={3} className=\"mb-3\">\n                <Button\n                  variant=\"outline-success\"\n                  onClick={() => setRegisterPlayerShow(true)}\n                >\n                  註冊新球員\n                </Button>\n                <RegisterPlayer\n                  registerPlayerShow={registerPlayerShow}\n                  setRegisterPlayerShow={setRegisterPlayerShow}\n                />\n              </Col>\n              <Col xs={{ span: 11, offset: 1 }} md={3} className=\"mb-3\">\n                <Button\n                  variant=\"outline-dark\"\n                  onClick={() => {\n                    handleTestData();\n                    props.setPlayerListSubmitted(true);\n                  }}\n                >\n                  帶入測試用資料\n                </Button>\n              </Col>\n            </Col>\n            <Form.Group\n              as={Col}\n              xs={{ span: 5, offset: 1, order: \"first\" }}\n              md={{ span: 6, offset: 3, order: \"last\" }}\n              controlId=\"Inning select\"\n            >\n              <Form.Label>比賽局數</Form.Label>\n              <Form.Select\n                aria-label=\"Inning select\"\n                defaultValue={9}\n                onChange={(e) => dispatch(setGameInning(e.target.value))}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n              </Form.Select>\n            </Form.Group>\n          </Row>\n          <hr />\n          <InputPlayer\n            team=\"home\"\n            pitcherList={homePitcherList}\n            batterList={homeBatterList}\n            setPitcherList={setHomePitcherList}\n            setBatterList={setHomeBatterList}\n          />\n          <hr />\n          <InputPlayer\n            team=\"away\"\n            pitcherList={awayPitcherList}\n            batterList={awayBatterList}\n            setPitcherList={setAwayPitcherList}\n            setBatterList={setAwayBatterList}\n          />\n          <Stack direction=\"horizontal\">\n            <Button className=\"ms-auto mb-3\" type=\"submit\">\n              送出\n            </Button>\n          </Stack>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default PlayerListInput;\n","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ScoreboardNav() {\n  const gameData = useSelector((state) => state.gameData);\n\n  return (\n    <>\n      <Row className=\"scoreboard_nav\">\n        <Col xs=\"4\" className=\"bg-home text-center\">\n          主：{gameData.homePoint}\n        </Col>\n        <Col xs=\"8\" className=\"bg-home-2nd bg-opacity-50 status text-nowrap\">\n          {gameData.topInning\n            ? \"投手：\" +\n              gameData.pitching[0].name +\n              \" 球數：\" +\n              (gameData.pitching[0].strike + gameData.pitching[0].ball) +\n              \" (好\" +\n              gameData.pitching[0].strike +\n              \"：壞\" +\n              gameData.pitching[0].ball +\n              \")\"\n            : \"打者：\" +\n              gameData.batting[0].name +\n              \" AB:\" +\n              (gameData.batting[0].single +\n                gameData.batting[0].double +\n                gameData.batting[0].triple +\n                gameData.batting[0].homerun +\n                gameData.batting[0].so +\n                gameData.batting[0].go +\n                gameData.batting[0].ao) +\n              \" ,H:\" +\n              (gameData.batting[0].single +\n                gameData.batting[0].double +\n                gameData.batting[0].triple +\n                gameData.batting[0].homerun) +\n              \" ,BB:\" +\n              gameData.batting[0].bb +\n              \" ,SO:\" +\n              gameData.batting[0].so}\n        </Col>\n      </Row>\n      <Row className=\"scoreboard_nav\">\n        <Col xs=\"4\" className=\"bg-away text-center\">\n          客：{gameData.awayPoint}\n        </Col>\n        <Col xs=\"8\" className=\"bg-away-2nd status text-nowrap\">\n          {gameData.topInning\n            ? \"打者：\" +\n              gameData.batting[0].name +\n              \" AB:\" +\n              (gameData.batting[0].single +\n                gameData.batting[0].double +\n                gameData.batting[0].triple +\n                gameData.batting[0].homerun +\n                gameData.batting[0].so +\n                gameData.batting[0].go +\n                gameData.batting[0].ao) +\n              \" ,H:\" +\n              (gameData.batting[0].single +\n                gameData.batting[0].double +\n                gameData.batting[0].triple +\n                gameData.batting[0].homerun) +\n              \" ,BB:\" +\n              gameData.batting[0].bb +\n              \" ,SO:\" +\n              gameData.batting[0].so\n            : \"投手：\" +\n              gameData.pitching[0].name +\n              \" 球數：\" +\n              (gameData.pitching[0].strike + gameData.pitching[0].ball) +\n              \" (好\" +\n              gameData.pitching[0].strike +\n              \"：壞\" +\n              gameData.pitching[0].ball +\n              \")\"}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import { Row, Col, Stack } from \"react-bootstrap\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretUp, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector } from \"react-redux\";\n\nfunction ScoreboardGameInfo() {\n  const gameData = useSelector((state) => state.gameData);\n  const strikeCount = [];\n  for (let i = 0; i < gameData.strike; i++) {\n    strikeCount.push(\n      <Col xs=\"3\" key={\"strike\" + i}>\n        <div className=\"scoreboard_ballStrike\"></div>\n      </Col>\n    );\n  }\n  const ballCount = [];\n  for (let i = 0; i < gameData.ball; i++) {\n    ballCount.push(\n      <Col xs=\"3\" key={\"ball\" + i}>\n        <div className=\"scoreboard_ballBall\"></div>\n      </Col>\n    );\n  }\n  const outCount = [];\n  for (let i = 0; i < gameData.out; i++) {\n    outCount.push(<div className=\"scoreboard_outOn\" key={\"out\" + i}></div>);\n  }\n\n  return (\n    <Row>\n      {/* 局數顯示 */}\n      <Stack\n        as={Col}\n        xs=\"3\"\n        gap={1}\n        direction=\"horizontal\"\n        className=\"align-items-center justify-content-center scoreboard_inningCount\"\n      >\n        <div>{gameData.currentInning}</div>\n        {gameData.topInning ? (\n          <FontAwesomeIcon icon={faCaretUp} />\n        ) : (\n          <FontAwesomeIcon icon={faCaretDown} />\n        )}\n      </Stack>\n      {/* 出局數顯示 */}\n      <Stack\n        as={Col}\n        xs=\"3\"\n        direction=\"horizontal\"\n        gap={2}\n        className=\"align-items-center justify-content-start scoreboard_outCount\"\n      >\n        <div>OUT:</div>\n        {outCount}\n      </Stack>\n      {/* 好壞球顯示 */}\n      <Col xs={{ span: 4, offset: 2 }}>\n        <Row className=\"align-items-center scoreboard_ballCount\">\n          <Col xs=\"3\" className=\"text-center\">\n            S:\n          </Col>\n          {strikeCount}\n        </Row>\n        <Row className=\"align-items-center scoreboard_ballCount\">\n          <Col xs=\"3\" className=\"text-center\">\n            B:\n          </Col>\n          {ballCount}\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ScoreboardGameInfo;\n","import { Row, Col } from \"react-bootstrap\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  strikeBall,\n  ballBall,\n  foulBall,\n  resetBallsCount,\n  strikeout,\n  walk,\n  updateScored,\n  updateRunner,\n  updateRunnerBase,\n  updatePitcherEr,\n  updatePitcherIra,\n  updateRunnerRuns,\n  updateBatterRbi,\n  halfInningHandle,\n  changeBatter,\n} from \"../../../../store/slice/gameDataSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction BallsCountArea() {\n  const dispatch = useDispatch();\n  const gameData = useSelector((state) => state.gameData);\n  const handleStrike = () => {\n    dispatch(strikeBall());\n  };\n  const handleBall = () => {\n    dispatch(ballBall());\n  };\n  const handleFoul = () => {\n    if (gameData.strike === 2) {\n      return dispatch(foulBall());\n    }\n    dispatch(strikeBall());\n  };\n\n  useEffect(() => {\n    //三振\n    if (gameData.strike === 3) {\n      dispatch(strikeout());\n      dispatch(resetBallsCount());\n      if (gameData.out < 2) {\n        dispatch(changeBatter());\n      }\n    }\n  }, [dispatch, gameData.strike, gameData.out]);\n\n  useEffect(() => {\n    //四壞球時跑壘及得分判定\n    if (gameData.ball === 4) {\n      dispatch(walk());\n      dispatch(resetBallsCount());\n      const runner = [...gameData.runner];\n      const runnerBase = [...gameData.runnerBase];\n      runner.push([gameData.batting[0], gameData.pitching[0]]);\n      runnerBase.push(0);\n      runnerBase.reverse();\n      for (let i = 0; i < runnerBase.length; i++) {\n        if (runnerBase[i] === i) {\n          runnerBase[i]++;\n        }\n      }\n      runnerBase.reverse();\n      if (runnerBase[0] === 4) {\n        dispatch(updatePitcherEr(runner[0][1].name));\n        if (runner[0][1].name !== gameData.pitching[0].name) {\n          dispatch(updatePitcherIra());\n        }\n        dispatch(updateRunnerRuns(runner[0][0].orderNumber));\n        dispatch(updateBatterRbi());\n        runnerBase.shift();\n        runner.shift();\n        dispatch(updateScored());\n      }\n      dispatch(updateRunner(runner));\n      dispatch(updateRunnerBase(runnerBase));\n      dispatch(changeBatter());\n    }\n  }, [\n    dispatch,\n    gameData.ball,\n    gameData.runner,\n    gameData.runnerBase,\n    gameData.batting,\n    gameData.pitching,\n  ]);\n\n  useEffect(() => {\n    //三出局\n    if (gameData.out === 3) {\n      dispatch(halfInningHandle());\n    }\n  }, [dispatch, gameData.out]);\n\n  return (\n    <>\n      <Row className=\"scoreboard_bat_area\">\n        <Col\n          xs=\"4\"\n          className=\"scoreboard_bat_area_ball scoreboard_elements\"\n          onClick={handleBall}\n        >\n          壞球\n        </Col>\n        <Col\n          xs=\"4\"\n          className=\"scoreboard_bat_area_strike scoreboard_elements\"\n          onClick={handleStrike}\n        >\n          好球\n        </Col>\n        <Col\n          xs=\"4\"\n          className=\"scoreboard_bat_area_ball scoreboard_elements\"\n          onClick={handleBall}\n        >\n          壞球\n        </Col>\n      </Row>\n      <Row className=\"scoreboard_foul_area scoreboard_elements\">\n        <Col xs=\"12\" onClick={handleFoul}>\n          界外\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default BallsCountArea;\n","import { Modal, Button, Stack } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  resetBallsCount,\n  groundOut,\n  sacrificeHit,\n  doublePlay,\n  updateScored,\n  updateRunner,\n  updateRunnerBase,\n  updatePitcherEr,\n  updatePitcherIra,\n  updateRunnerRuns,\n  updateBatterRbi,\n  changeBatter,\n} from \"../../../../../store/slice/gameDataSlice\";\n\nfunction GroundArea(props) {\n  const { groundAreaShow, setGroundAreaShow, groundToRight } = props;\n  const gameData = useSelector((state) => state.gameData);\n  const dispatch = useDispatch();\n\n  const handleGroundToRight = () => {\n    setGroundAreaShow(false);\n    const runner = [...gameData.runner];\n    const runnerBase = [...gameData.runnerBase];\n    if (gameData.charge) {\n      dispatch(doublePlay());\n      runnerBase.shift();\n      runner.shift();\n      runnerBase.forEach(function (element, index, array) {\n        array[index]++;\n      });\n    } else {\n      if (runnerBase[0] === 3) {\n        if (runnerBase[runnerBase.length - 1] !== 1 || gameData.out !== 1) {\n          if (runnerBase[1] === 2) {\n            runnerBase[1]++;\n          }\n          dispatch(updatePitcherEr(runner[0][1].name));\n          if (runner[0][1].name !== gameData.pitching[0].name) {\n            dispatch(updatePitcherIra());\n          }\n          dispatch(updateRunnerRuns(runner[0][0].orderNumber));\n          dispatch(updateBatterRbi());\n          runnerBase.shift();\n          runner.shift();\n          dispatch(updateScored());\n        }\n      } else if (runnerBase[0] === 2) {\n        runnerBase[0]++;\n      }\n      if (runnerBase[runnerBase.length - 1] === 1) {\n        dispatch(doublePlay());\n        runnerBase.pop();\n        runner.pop();\n      }\n    }\n    dispatch(updateRunner(runner));\n    dispatch(updateRunnerBase(runnerBase));\n    dispatch(groundOut());\n    dispatch(resetBallsCount());\n  };\n\n  const handleGroundToLeft = () => {\n    setGroundAreaShow(false);\n    const runner = [...gameData.runner];\n    const runnerBase = [...gameData.runnerBase];\n    if (gameData.charge) {\n      dispatch(doublePlay());\n      runnerBase.shift();\n      runner.shift();\n      runnerBase.forEach(function (element, index, array) {\n        array[index]++;\n      });\n    } else if (runnerBase[runnerBase.length - 1] === 1) {\n      dispatch(doublePlay());\n      runnerBase.pop();\n      runner.pop();\n    }\n    dispatch(updateRunner(runner));\n    dispatch(updateRunnerBase(runnerBase));\n    dispatch(groundOut());\n    dispatch(resetBallsCount());\n  };\n\n  const handleChargeToRight = () => {\n    setGroundAreaShow(false);\n    const runner = [...gameData.runner];\n    const runnerBase = [...gameData.runnerBase];\n    runnerBase.forEach(function (element, index, array) {\n      array[index]++;\n    });\n    if (runnerBase[0] === 4) {\n      dispatch(updatePitcherEr(runner[0][1].name));\n      if (runner[0][1].name !== gameData.pitching[0].name) {\n        dispatch(updatePitcherIra());\n      }\n      dispatch(updateRunnerRuns(runner[0][0].orderNumber));\n      dispatch(updateBatterRbi());\n      runnerBase.shift();\n      runner.shift();\n      dispatch(updateScored());\n    }\n    dispatch(updateRunner(runner));\n    dispatch(updateRunnerBase(runnerBase));\n    dispatch(resetBallsCount());\n    dispatch(sacrificeHit());\n    dispatch(changeBatter());\n  };\n\n  const handleChargeToLeft = () => {\n    setGroundAreaShow(false);\n    dispatch(resetBallsCount());\n    dispatch(groundOut());\n  };\n\n  return (\n    <Modal\n      show={groundAreaShow}\n      onHide={() => setGroundAreaShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>請選擇擊球結果</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Stack direction=\"horizontal\" className=\"justify-content-evenly\">\n          <Button\n            variant=\"outline-info\"\n            onClick={groundToRight ? handleGroundToRight : handleGroundToLeft}\n          >\n            滾地球出局\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            onClick={groundToRight ? handleChargeToRight : handleChargeToLeft}\n          >\n            犧牲觸擊\n          </Button>\n        </Stack>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => setGroundAreaShow(false)}>\n          關閉\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default GroundArea;\n","import { Modal, Button, Stack } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  resetBallsCount,\n  flyOut,\n  sacrificeFly,\n  updateScored,\n  updateRunner,\n  updateRunnerBase,\n  updatePitcherEr,\n  updatePitcherIra,\n  updateRunnerRuns,\n  updateBatterRbi,\n  changeBatter,\n} from \"../../../../../store/slice/gameDataSlice\";\n\nfunction FlyArea(props) {\n  const { flyAreaShow, setFlyAreaShow, flyToRight, handleHit } = props;\n  const gameData = useSelector((state) => state.gameData);\n  const dispatch = useDispatch();\n\n  const handleFlyOut = () => {\n    setFlyAreaShow(false);\n    if (gameData.charge) {\n      handleHit(1);\n    } else {\n      dispatch(flyOut());\n      dispatch(resetBallsCount());\n    }\n  };\n\n  const handlePowerFlyToRight = () => {\n    setFlyAreaShow(false);\n    dispatch(resetBallsCount());\n    if (gameData.charge) {\n      handleHit(1);\n    } else if (gameData.out <= 1) {\n      const runner = [...gameData.runner];\n      const runnerBase = [...gameData.runnerBase];\n      if (runnerBase[0] === 3) {\n        if (runnerBase[1] === 2) {\n          runnerBase[1]++;\n        }\n        dispatch(updatePitcherEr(runner[0][1].name));\n        if (runner[0][1].name !== gameData.pitching[0].name) {\n          dispatch(updatePitcherIra());\n        }\n        dispatch(updateRunnerRuns(runner[0][0].orderNumber));\n        dispatch(updateBatterRbi());\n        dispatch(updateScored());\n        runnerBase.shift();\n        runner.shift();\n        dispatch(updateRunner(runner));\n        dispatch(updateRunnerBase(runnerBase));\n        dispatch(sacrificeFly());\n        dispatch(changeBatter());\n      } else if (runnerBase[0] === 2) {\n        runnerBase[0]++;\n        dispatch(updateRunnerBase(runnerBase));\n        dispatch(flyOut());\n      }\n    } else {\n      dispatch(flyOut());\n    }\n  };\n\n  const handlePowerFlyToLeft = () => {\n    setFlyAreaShow(false);\n    dispatch(resetBallsCount());\n    if (gameData.charge) {\n      handleHit(1);\n    } else if (gameData.out <= 1 && gameData.runnerBase[0] === 3) {\n      const runner = [...gameData.runner];\n      const runnerBase = [...gameData.runnerBase];\n      dispatch(updatePitcherEr(runner[0][1].name));\n      if (runner[0][1].name !== gameData.pitching[0].name) {\n        dispatch(updatePitcherIra());\n      }\n      dispatch(updateRunnerRuns(runner[0][0].orderNumber));\n      dispatch(updateBatterRbi());\n      dispatch(updateScored());\n      runnerBase.shift();\n      runner.shift();\n      dispatch(updateRunner(runner));\n      dispatch(updateRunnerBase(runnerBase));\n      dispatch(sacrificeFly());\n      dispatch(changeBatter());\n    } else {\n      dispatch(flyOut());\n    }\n  };\n\n  return (\n    <Modal\n      show={flyAreaShow}\n      onHide={() => setFlyAreaShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>請選擇擊球結果</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Stack direction=\"horizontal\" className=\"justify-content-evenly\">\n          <Button\n            variant=\"outline-warning\"\n            onClick={() => {\n              setFlyAreaShow(false);\n              handleHit(1);\n            }}\n          >\n            一壘安打\n          </Button>\n          <Button variant=\"outline-info\" onClick={handleFlyOut}>\n            飛球出局\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            onClick={flyToRight ? handlePowerFlyToRight : handlePowerFlyToLeft}\n          >\n            強力飛球出局\n          </Button>\n        </Stack>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => setFlyAreaShow(false)}>\n          關閉\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default FlyArea;\n","import { Row, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  resetBallsCount,\n  updateHit,\n  groundOut,\n  updateScored,\n  updateRunner,\n  updateRunnerBase,\n  updatePitcherEr,\n  updatePitcherIra,\n  updateRunnerRuns,\n  updateBatterRbi,\n  changeBatter,\n} from \"../../../../store/slice/gameDataSlice\";\nimport { useSelector } from \"react-redux\";\nimport GroundArea from \"./InplayAreaComponent/GroundArea\";\nimport FlyArea from \"./InplayAreaComponent/FlyArea\";\n\nfunction InplayArea() {\n  const dispatch = useDispatch();\n  const gameData = useSelector((state) => state.gameData);\n  const [groundAreaShow, setGroundAreaShow] = useState(false);\n  const [groundToRight, setGroundToRight] = useState(false);\n  const [flyAreaShow, setFlyAreaShow] = useState(false);\n  const [flyToRight, setFlyToRight] = useState(false);\n\n  const handleHit = (base) => {\n    dispatch(updateHit(base));\n    dispatch(resetBallsCount());\n    const runner = [...gameData.runner];\n    const runnerBase = [...gameData.runnerBase];\n    runner.push([gameData.batting[0], gameData.pitching[0]]);\n    runnerBase.push(0);\n    runnerBase.forEach(function (element, index, array) {\n      array[index] = element + base;\n    });\n    runnerBase.forEach(function (element, index) {\n      if (element > 3) {\n        dispatch(updatePitcherEr(runner[0][1].name));\n        if (runner[index][1].name !== gameData.pitching[0].name) {\n          dispatch(updatePitcherIra());\n        }\n        dispatch(updateRunnerRuns(runner[index][0].orderNumber));\n        dispatch(updateBatterRbi());\n        dispatch(updateScored());\n      }\n    });\n    const runnerToHome = runnerBase.filter((element) => element > 3).length;\n    runnerBase.splice(0, runnerToHome);\n    runner.splice(0, runnerToHome);\n    dispatch(updateRunner(runner));\n    dispatch(updateRunnerBase(runnerBase));\n    dispatch(changeBatter());\n  };\n\n  const handleGroundOut = () => {\n    if (gameData.runner.length > 0 && gameData.out <= 1) {\n      setGroundAreaShow(true);\n    } else {\n      dispatch(resetBallsCount());\n      dispatch(groundOut());\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col\n          xs=\"6\"\n          className=\"scoreboard_ground_area scoreboard_elements\"\n          onClick={() => {\n            setGroundToRight(true);\n            handleGroundOut();\n          }}\n        >\n          滾地出局區\n          <br />\n          (一壘雙殺，二三壘推進)\n          <br />\n          犧牲觸擊成功區\n        </Col>\n        <Col\n          xs=\"6\"\n          className=\"scoreboard_ground_area scoreboard_elements\"\n          onClick={() => {\n            setGroundToRight(false);\n            handleGroundOut();\n          }}\n        >\n          滾地出局區\n          <br />\n          (一壘雙殺，二三壘不動)\n          <br />\n          犧牲觸擊失敗區\n        </Col>\n      </Row>\n      <GroundArea\n        groundAreaShow={groundAreaShow}\n        setGroundAreaShow={setGroundAreaShow}\n        groundToRight={groundToRight}\n      />\n      <Row>\n        <Col\n          xs=\"6\"\n          className=\"scoreboard_fly_area scoreboard_elements\"\n          onClick={() => {\n            setFlyToRight(true);\n            setFlyAreaShow(true);\n          }}\n        >\n          直接一壘安打區\n          <br />\n          強力飛球區\n          <br />\n          (二三壘跑者推進)\n        </Col>\n        <Col\n          xs=\"6\"\n          className=\"scoreboard_fly_area scoreboard_elements\"\n          onClick={() => {\n            setFlyToRight(false);\n            setFlyAreaShow(true);\n          }}\n        >\n          直接一壘安打區\n          <br />\n          強力飛球區\n          <br />\n          (三壘跑者推進)\n        </Col>\n      </Row>\n      <FlyArea\n        flyAreaShow={flyAreaShow}\n        setFlyAreaShow={setFlyAreaShow}\n        flyToRight={flyToRight}\n        handleHit={handleHit}\n      />\n      <Row className=\"scoreboard_single_area scoreboard_elements\">\n        <Col xs=\"12\" onClick={() => handleHit(1)}>\n          一壘安打區\n          <br />\n          (飛球落地)\n        </Col>\n      </Row>\n      <Row>\n        <Col\n          xs=\"4\"\n          className=\"scoreboard_triple_area scoreboard_elements\"\n          onClick={() => handleHit(3)}\n        >\n          三壘安打\n        </Col>\n        <Col\n          xs=\"8\"\n          className=\"scoreboard_double_area scoreboard_elements\"\n          onClick={() => handleHit(2)}\n        >\n          二壘安打區\n        </Col>\n      </Row>\n      <Row className=\"scoreboard_homerun_area scoreboard_elements\">\n        <Col xs=\"12\" onClick={() => handleHit(4)}>\n          全壘打\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default InplayArea;\n","import { Row, Col, Form } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction ChangePitcher(props) {\n  const { changePitching, setChangePitching } = props;\n  return (\n    <Row className=\"mb-3\">\n      <Form.Group as={Col} xs=\"4\" controlId={\"changePitcherSerialNum\"}>\n        <Form.Label>背號(0~99)</Form.Label>\n        <Form.Control\n          value={changePitching.serialNum}\n          onChange={(e) =>\n            setChangePitching({\n              ...changePitching,\n              serialNum: e.target.value,\n            })\n          }\n          type=\"number\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          請填寫 0 ~ 99 的正整數\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group as={Col} xs=\"8\" controlId={\"changePitcherName\"}>\n        <Form.Label>投手姓名</Form.Label>\n        <Form.Control\n          value={changePitching.name}\n          onChange={(e) =>\n            setChangePitching({\n              ...changePitching,\n              name: e.target.value,\n            })\n          }\n          type=\"text\"\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          請填寫更換投手姓名\n        </Form.Control.Feedback>\n      </Form.Group>\n    </Row>\n  );\n}\n\nexport default ChangePitcher;\n","import { Row, Col, Form, Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RegisterPlayer from \"../../../../PlayerListInput/InputPlayer/RegisterPlayer\";\n\nfunction ChangePitcherFromDB(props) {\n  const { setChangePitching } = props;\n  const [registerPlayerShow, setRegisterPlayerShow] = useState(false);\n  const gameData = useSelector((state) => state.gameData);\n\n  useEffect(() => {\n    setChangePitching({\n      serialNum: gameData.playerListFromDB[0].serialNum,\n      name: gameData.playerListFromDB[0].name,\n    });\n  }, [setChangePitching, gameData.playerListFromDB]);\n\n  const handlePitcherInput = (e) => {\n    const pitcher = gameData.playerListFromDB.find(\n      (player) => player.name === e.target.value\n    );\n    setChangePitching({\n      serialNum: pitcher.serialNum,\n      name: pitcher.name,\n    });\n  };\n\n  return (\n    <Row className=\"mb-3\">\n      <Form.Group as={Col} xs=\"6\" controlId=\"selectPlayer\">\n        <Form.Select\n          aria-label=\"Pitcher player select list\"\n          onChange={handlePitcherInput}\n        >\n          {gameData.playerListFromDB.map((player, index) => {\n            return (\n              <option key={\"player\" + index} value={player.name}>\n                {\"( \" + player.serialNum + \" ) \" + player.name}\n              </option>\n            );\n          })}\n        </Form.Select>\n      </Form.Group>\n      <Col xs={{ span: 5, offset: 1 }} className=\"mb-3\">\n        <Button\n          variant=\"outline-success\"\n          onClick={() => setRegisterPlayerShow(true)}\n        >\n          註冊新球員\n        </Button>\n        <RegisterPlayer\n          registerPlayerShow={registerPlayerShow}\n          setRegisterPlayerShow={setRegisterPlayerShow}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default ChangePitcherFromDB;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Table, Container, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  changePitcher,\n  setCharge,\n} from \"../../../../../store/slice/gameDataSlice\";\nimport { useSelector } from \"react-redux\";\nimport { defaultPitcher } from \"../../../../PlayerListInput/Player\";\nimport ChangePitcher from \"./ChangePitcher\";\nimport ChangePitcherFromDB from \"./ChangePitcherFromDB\";\n\nfunction PitcherInfo(props) {\n  const { pitcherShow, setPitcherShow } = props;\n  const dispatch = useDispatch();\n  const gameData = useSelector((state) => state.gameData);\n  const [validated, setValidated] = useState(false);\n  const [changePitching, setChangePitching] = useState({\n    serialNum: \"\",\n    name: \"\",\n  });\n  const pitchingOrder = [...gameData.pitching].reverse();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    setValidated(true);\n    if (form.checkValidity() === true) {\n      dispatch(\n        changePitcher({\n          ...defaultPitcher,\n          serialNum: changePitching.serialNum,\n          name: changePitching.name,\n        })\n      );\n      setChangePitching({\n        serialNum: \"\",\n        name: \"\",\n      });\n      setPitcherShow(false);\n      setValidated(false);\n    }\n  };\n\n  return (\n    <Modal\n      show={pitcherShow}\n      onHide={() => setPitcherShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>投手資訊</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Table striped bordered>\n          <thead>\n            <tr>\n              <th>背號</th>\n              <th>姓名</th>\n              <th>IP</th>\n              <th>H</th>\n              <th>HR</th>\n              <th>ER</th>\n              <th>BB</th>\n              <th>SO</th>\n              <th>球數</th>\n            </tr>\n          </thead>\n          <tbody>\n            {pitchingOrder.map((pitcher, index) => {\n              return (\n                <tr key={\"pitcher\" + index}>\n                  <td>{pitcher.serialNum}</td>\n                  <td>{pitcher.name}</td>\n                  <td>{parseInt(pitcher.o / 3) + (pitcher.o % 3) / 10}</td>\n                  <td>{pitcher.h}</td>\n                  <td>{pitcher.hr}</td>\n                  <td>{pitcher.er}</td>\n                  <td>{pitcher.bbPit}</td>\n                  <td>{pitcher.k}</td>\n                  <td>\n                    {pitcher.strike +\n                      pitcher.ball +\n                      \"(\" +\n                      pitcher.strike +\n                      \":\" +\n                      pitcher.ball +\n                      \")\"}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        {gameData.runner.length > 1 &&\n        gameData.runnerBase[gameData.runnerBase.length - 2] === 2 &&\n        gameData.out < 2 &&\n        !gameData.charge ? (\n          <Button\n            variant=\"outline-primary\"\n            onClick={() => {\n              dispatch(setCharge());\n              setPitcherShow(false);\n            }}\n          >\n            趨前守備\n          </Button>\n        ) : gameData.charge ? (\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              dispatch(setCharge());\n              setPitcherShow(false);\n            }}\n          >\n            趨前守備 已開啟\n          </Button>\n        ) : (\n          <Button variant=\"outline-primary\" disabled>\n            趨前守備\n          </Button>\n        )}\n      </Modal.Body>\n      <hr />\n      <Container fluid>\n        <Form\n          className=\"playerForm\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <div className=\"playerForm_subtitle\">更換投手</div>\n          {gameData.playerListFromDB.length === 0 ? (\n            <ChangePitcher\n              changePitching={changePitching}\n              setChangePitching={setChangePitching}\n            />\n          ) : (\n            <ChangePitcherFromDB setChangePitching={setChangePitching} />\n          )}\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setPitcherShow(false)}>\n              關閉\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              更換投手\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Container>\n    </Modal>\n  );\n}\n\nexport default PitcherInfo;\n","import { Modal, Button, Table } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction BatterInfo(props) {\n  const { batterShow, setBatterShow } = props;\n  const gameData = useSelector((state) => state.gameData);\n  const battingOrder = [...gameData.battingOrder].sort((a, b) => {\n    return a.orderNumber - b.orderNumber;\n  });\n\n  return (\n    <Modal\n      show={batterShow}\n      onHide={() => setBatterShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>打者資訊</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Table striped bordered>\n          <thead>\n            <tr>\n              <th>背號</th>\n              <th>姓名</th>\n              <th>AB</th>\n              <th>R</th>\n              <th>H</th>\n              <th>HR</th>\n              <th>RBI</th>\n              <th>BB</th>\n              <th>SO</th>\n            </tr>\n          </thead>\n          <tbody>\n            {battingOrder.map((batter, index) => {\n              return (\n                <tr key={\"batter\" + index}>\n                  <td>{batter.serialNum}</td>\n                  <td>{batter.name}</td>\n                  <td>\n                    {batter.single +\n                      batter.double +\n                      batter.triple +\n                      batter.homerun +\n                      batter.so +\n                      batter.go +\n                      batter.ao}\n                  </td>\n                  <td>{batter.runs}</td>\n                  <td>\n                    {batter.single +\n                      batter.double +\n                      batter.triple +\n                      batter.homerun}\n                  </td>\n                  <td>{batter.homerun}</td>\n                  <td>{batter.rbi}</td>\n                  <td>{batter.bb}</td>\n                  <td>{batter.so}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => setBatterShow(false)}>\n          關閉\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default BatterInfo;\n","import { Stack } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PitcherInfo from \"./PlayerAreaComponent/PitcherInfo\";\nimport BatterInfo from \"./PlayerAreaComponent/BatterInfo\";\n\nfunction PlayerArea() {\n  const gameData = useSelector((state) => state.gameData);\n  const [pitcherShow, setPitcherShow] = useState(false);\n  const [batterShow, setBatterShow] = useState(false);\n\n  return (\n    <>\n      <Stack\n        className=\"pitcher scoreboard_elements align-items-center justify-content-center\"\n        onClick={() => setPitcherShow(true)}\n      >\n        {gameData.pitching[0].serialNum}\n      </Stack>\n      <PitcherInfo pitcherShow={pitcherShow} setPitcherShow={setPitcherShow} />\n      <Stack\n        className=\"batter scoreboard_elements align-items-center justify-content-center\"\n        onClick={() => setBatterShow(true)}\n      >\n        {gameData.batting[0].serialNum}\n      </Stack>\n      <BatterInfo batterShow={batterShow} setBatterShow={setBatterShow} />\n    </>\n  );\n}\n\nexport default PlayerArea;\n","import { Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport BallsCountArea from \"./GameplayAreaComponent/BallsCountArea\";\nimport InplayArea from \"./GameplayAreaComponent/InplayArea\";\nimport PlayerArea from \"./GameplayAreaComponent/PlayerArea\";\n\nexport default function GamePlayArea() {\n  return (\n    <Col xs=\"9\">\n      <BallsCountArea />\n      <InplayArea />\n      <PlayerArea />\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { Row, Col, Stack } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector } from \"react-redux\";\n\nexport default function TeamInfoArea() {\n  const gameData = useSelector((state) => state.gameData);\n\n  return (\n    <Col xs=\"3\">\n      <Row className=\"scoreboard_court\">\n        <Stack className=\"justify-content-center align-items-center\">\n          <div className=\"court\">\n            {gameData.runnerBase.map((element, index) => {\n              return (\n                <div className={\"base base_\" + element} key={\"base\" + element}>\n                  <p>{gameData.runner[index][0].serialNum}</p>\n                </div>\n              );\n            })}\n            <div className=\"base base_4\">\n              <p>{gameData.batting[0].serialNum}</p>\n            </div>\n          </div>\n        </Stack>\n      </Row>\n      <Row className=\"bg-home\">\n        <div className=\"scoreboard_teamsInfo_pitcher text-nowrap\">\n          {gameData.topInning\n            ? \"(\" +\n              gameData.pitching[0].serialNum +\n              \")\" +\n              gameData.pitching[0].name\n            : \"(\" +\n              gameData.homePitchers[0].serialNum +\n              \")\" +\n              gameData.homePitchers[0].name}\n        </div>\n        <div className=\"scoreboard_teamsInfo_batter text-nowrap\">\n          {gameData.topInning\n            ? gameData.homeBatters.map((batter, index) => {\n                return (\n                  <div key={\"homeBatter\" + index}>\n                    {\"(\" + batter.serialNum + \")\" + batter.name}\n                  </div>\n                );\n              })\n            : [\n                <div key=\"nextIcon\">\n                  {\"Next \"}\n                  <FontAwesomeIcon icon={faCaretDown} />\n                </div>,\n                gameData.battingOrder.map((batter, index) => {\n                  return (\n                    <div key={\"homeBatter\" + index}>\n                      {\"(\" + batter.serialNum + \")\" + batter.name}\n                    </div>\n                  );\n                }),\n              ]}\n        </div>\n      </Row>\n      <Row className=\"bg-away\">\n        <div className=\"scoreboard_teamsInfo_pitcher text-nowrap\">\n          {gameData.topInning\n            ? \"(\" +\n              gameData.awayPitchers[0].serialNum +\n              \")\" +\n              gameData.awayPitchers[0].name\n            : \"(\" +\n              gameData.pitching[0].serialNum +\n              \")\" +\n              gameData.pitching[0].name}\n        </div>\n        <div className=\"scoreboard_teamsInfo_batter text-nowrap\">\n          {gameData.topInning\n            ? [\n                <div key=\"nextIcon\">\n                  {\"Next \"}\n                  <FontAwesomeIcon icon={faCaretDown} />\n                </div>,\n                gameData.battingOrder.map((batter, index) => {\n                  return (\n                    <div key={\"awayBatter\" + index}>\n                      {\"(\" + batter.serialNum + \")\" + batter.name}\n                    </div>\n                  );\n                }),\n              ]\n            : gameData.awayBatters.map((batter, index) => {\n                return (\n                  <div key={\"awayBatter\" + index}>\n                    {\"(\" + batter.serialNum + \")\" + batter.name}\n                  </div>\n                );\n              })}\n        </div>\n      </Row>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { Modal, Button, Table, Nav, Tab } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction GameResultDisplay(props) {\n  const gameData = useSelector((state) => state.gameData);\n  const { showGameResult, setShowGameResult, handleGameResultUpdate } = props;\n  const totalInning = [];\n  for (let i = 1; i <= gameData.gameInning; i++) {\n    totalInning.push(<th key={\"inning\" + i}>{i}</th>);\n  }\n  //客隊分數＆安打\n  const awayResult = [];\n  gameData.awayPointList.forEach(function (element, index) {\n    awayResult.push(<td key={\"away\" + index}>{element}</td>);\n  });\n  awayResult.push(<td key=\"awayPoint\">{gameData.awayPoint}</td>);\n  let awayHitsTotal = 0;\n  gameData.awayBatters.forEach(function (element) {\n    awayHitsTotal +=\n      element.single + element.double + element.triple + element.homerun;\n  });\n  awayResult.push(<td key=\"awayHits\">{awayHitsTotal}</td>);\n  //主隊分數＆安打\n  const homeResult = [];\n  gameData.homePointList.forEach(function (element, index) {\n    homeResult.push(<td key={\"home\" + index}>{element}</td>);\n  });\n  homeResult.push(<td key=\"homePoint\">{gameData.homePoint}</td>);\n  let homeHitsTotal = 0;\n  gameData.homeBatters.forEach(function (element) {\n    homeHitsTotal +=\n      element.single + element.double + element.triple + element.homerun;\n  });\n  homeResult.push(<td key=\"homeHits\">{homeHitsTotal}</td>);\n  //主隊投打名單\n  const homePitchers = [...gameData.homePitchers].reverse();\n  const homeBatters = [...gameData.homeBatters].sort((a, b) => {\n    return a.orderNumber - b.orderNumber;\n  });\n  //客隊投打名單\n  const awayPitchers = [...gameData.awayPitchers].reverse();\n  const awayBatters = [...gameData.awayBatters].sort((a, b) => {\n    return a.orderNumber - b.orderNumber;\n  });\n\n  return (\n    <Modal\n      show={showGameResult}\n      onHide={() => setShowGameResult(false)}\n      backdrop=\"static\"\n      keyboard={false}\n      fullscreen={true}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      className=\"gameResult\"\n    >\n      <Modal.Header>\n        <Modal.Title>\n          比賽結束！最終比數 主 {gameData.homePoint}：客 {gameData.awayPoint}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"scoreboard_result\">\n        <Table striped bordered className=\"caption-top\">\n          <caption>比賽結果</caption>\n          <thead>\n            <tr>\n              <th>#</th>\n              {totalInning}\n              <th className=\"table-active\">R</th>\n              <th className=\"table-active\">H</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>AWAY</th>\n              {awayResult}\n            </tr>\n            <tr>\n              <th>HOME</th>\n              {homeResult}\n            </tr>\n          </tbody>\n        </Table>\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"home\">\n          <Nav variant=\"pills\" className=\"mt-3\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"home\" className=\"result_title\">\n                主隊成績\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"away\" className=\"result_title\">\n                客隊成績\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"home\">\n              <Table striped bordered className=\"mt-3 caption-top\">\n                <caption>投手</caption>\n                <thead>\n                  <tr>\n                    <th>背號</th>\n                    <th>姓名</th>\n                    <th>IP</th>\n                    <th>H</th>\n                    <th>HR</th>\n                    <th>ER</th>\n                    <th>BB</th>\n                    <th>SO</th>\n                    <th>球數</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {homePitchers.map((pitcher, index) => {\n                    return (\n                      <tr key={\"pitcher\" + index}>\n                        <td>{pitcher.serialNum}</td>\n                        <td>{pitcher.name}</td>\n                        <td>\n                          {parseInt(pitcher.o / 3) + (pitcher.o % 3) / 10}\n                        </td>\n                        <td>{pitcher.h}</td>\n                        <td>{pitcher.hr}</td>\n                        <td>{pitcher.er}</td>\n                        <td>{pitcher.bbPit}</td>\n                        <td>{pitcher.k}</td>\n                        <td>\n                          {pitcher.strike +\n                            pitcher.ball +\n                            \"(\" +\n                            pitcher.strike +\n                            \":\" +\n                            pitcher.ball +\n                            \")\"}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n              <Table striped bordered className=\"caption-top\">\n                <caption>打者</caption>\n                <thead>\n                  <tr>\n                    <th>背號</th>\n                    <th>姓名</th>\n                    <th>AB</th>\n                    <th>R</th>\n                    <th>H</th>\n                    <th>HR</th>\n                    <th>RBI</th>\n                    <th>BB</th>\n                    <th>SO</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {homeBatters.map((batter, index) => {\n                    return (\n                      <tr key={\"batter\" + index}>\n                        <td>{batter.serialNum}</td>\n                        <td>{batter.name}</td>\n                        <td>\n                          {batter.single +\n                            batter.double +\n                            batter.triple +\n                            batter.homerun +\n                            batter.so +\n                            batter.go +\n                            batter.ao}\n                        </td>\n                        <td>{batter.runs}</td>\n                        <td>\n                          {batter.single +\n                            batter.double +\n                            batter.triple +\n                            batter.homerun}\n                        </td>\n                        <td>{batter.homerun}</td>\n                        <td>{batter.rbi}</td>\n                        <td>{batter.bb}</td>\n                        <td>{batter.so}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"away\">\n              <Table striped bordered className=\"mt-3 caption-top\">\n                <caption>投手</caption>\n                <thead>\n                  <tr>\n                    <th>背號</th>\n                    <th>姓名</th>\n                    <th>IP</th>\n                    <th>H</th>\n                    <th>HR</th>\n                    <th>ER</th>\n                    <th>BB</th>\n                    <th>SO</th>\n                    <th>球數</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {awayPitchers.map((pitcher, index) => {\n                    return (\n                      <tr key={\"pitcher\" + index}>\n                        <td>{pitcher.serialNum}</td>\n                        <td>{pitcher.name}</td>\n                        <td>\n                          {parseInt(pitcher.o / 3) + (pitcher.o % 3) / 10}\n                        </td>\n                        <td>{pitcher.h}</td>\n                        <td>{pitcher.hr}</td>\n                        <td>{pitcher.er}</td>\n                        <td>{pitcher.bbPit}</td>\n                        <td>{pitcher.k}</td>\n                        <td>\n                          {pitcher.strike +\n                            pitcher.ball +\n                            \"(\" +\n                            pitcher.strike +\n                            \":\" +\n                            pitcher.ball +\n                            \")\"}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n              <Table striped bordered className=\"caption-top\">\n                <caption>打者</caption>\n                <thead>\n                  <tr>\n                    <th>背號</th>\n                    <th>姓名</th>\n                    <th>AB</th>\n                    <th>R</th>\n                    <th>H</th>\n                    <th>HR</th>\n                    <th>RBI</th>\n                    <th>BB</th>\n                    <th>SO</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {awayBatters.map((batter, index) => {\n                    return (\n                      <tr key={\"batter\" + index}>\n                        <td>{batter.serialNum}</td>\n                        <td>{batter.name}</td>\n                        <td>\n                          {batter.single +\n                            batter.double +\n                            batter.triple +\n                            batter.homerun +\n                            batter.so +\n                            batter.go +\n                            batter.ao}\n                        </td>\n                        <td>{batter.runs}</td>\n                        <td>\n                          {batter.single +\n                            batter.double +\n                            batter.triple +\n                            batter.homerun}\n                        </td>\n                        <td>{batter.homerun}</td>\n                        <td>{batter.rbi}</td>\n                        <td>{batter.bb}</td>\n                        <td>{batter.so}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          as={Link}\n          to=\"/Pronball_React/\"\n          variant=\"primary\"\n          onClick={() => {\n            handleGameResultUpdate();\n          }}\n        >\n          結束並退出\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default GameResultDisplay;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  doc,\n  setDoc,\n  getDocs,\n  orderBy,\n  query,\n  updateDoc,\n} from \"firebase/firestore\";\nimport GameResultDisplay from \"./GameResultDisplay\";\nimport playersFromDB from \"../../../../firebase\";\n\nfunction GameResult(props) {\n  const { showGameResult, setShowGameResult } = props;\n  const gameData = useSelector((state) => state.gameData);\n  const allPitchers = [...gameData.homePitchers, ...gameData.awayPitchers];\n  const allBatters = [...gameData.homeBatters, ...gameData.awayBatters];\n\n  const updatePlayerData = (playerListFromDB) => {\n    //處理投手數據\n    const alreadyExistPitcher = [];\n    const noRegisterPitcher = [];\n    for (let pitcher of allPitchers) {\n      playerListFromDB.find((player) => player.name === pitcher.name)\n        ? alreadyExistPitcher.push(pitcher)\n        : noRegisterPitcher.push(pitcher);\n    }\n    alreadyExistPitcher.forEach((pitcher) => {\n      playerListFromDB.forEach((player, index, arr) => {\n        if (player.name === pitcher.name) {\n          arr[index] = {\n            ...player,\n            pitcher: {\n              strike: player.pitcher.strike + pitcher.strike,\n              ball: player.pitcher.ball + pitcher.ball,\n              er: player.pitcher.er + pitcher.er,\n              ira: player.pitcher.ira + pitcher.ira,\n              k: player.pitcher.k + pitcher.k,\n              o: player.pitcher.o + pitcher.o,\n              goPit: player.pitcher.goPit + pitcher.goPit,\n              aoPit: player.pitcher.aoPit + pitcher.aoPit,\n              bbPit: player.pitcher.bbPit + pitcher.bbPit,\n              dpPit: player.pitcher.dpPit + pitcher.dpPit,\n              h: player.pitcher.h + pitcher.h,\n              hr: player.pitcher.hr + pitcher.hr,\n              gamePlayed: player.pitcher.gamePlayed + 1,\n            },\n          };\n        } else {\n          arr[index] = player;\n        }\n      });\n    });\n    //處理及註冊未在資料庫球員\n    noRegisterPitcher.forEach((pitcher, index, arr) => {\n      arr[index] = {\n        ...pitcher,\n        name: pitcher.name + \"(Pitcher\" + index + \")\",\n      };\n    });\n    for (let player of noRegisterPitcher) {\n      registerPitcher(player);\n    }\n    //處理打者數據\n    const alreadyExistBatter = [];\n    const noRegisterBatter = [];\n    for (let batter of allBatters) {\n      playerListFromDB.find((player) => player.name === batter.name)\n        ? alreadyExistBatter.push(batter)\n        : noRegisterBatter.push(batter);\n    }\n    alreadyExistBatter.forEach((batter) => {\n      playerListFromDB.forEach((player, index, arr) => {\n        if (player.name === batter.name) {\n          arr[index] = {\n            ...player,\n            batter: {\n              single: player.batter.single + batter.single,\n              double: player.batter.double + batter.double,\n              triple: player.batter.triple + batter.triple,\n              homerun: player.batter.homerun + batter.homerun,\n              rbi: player.batter.rbi + batter.rbi,\n              runs: player.batter.runs + batter.runs,\n              bb: player.batter.bb + batter.bb,\n              so: player.batter.so + batter.so,\n              go: player.batter.go + batter.go,\n              ao: player.batter.ao + batter.ao,\n              dp: player.batter.dp + batter.dp,\n              sf: player.batter.sf + batter.sf,\n              sh: player.batter.sh + batter.sh,\n              gamePlayed: player.batter.gamePlayed + 1,\n            },\n          };\n        } else {\n          arr[index] = player;\n        }\n      });\n    });\n    //處理及註冊未在資料庫球員\n    noRegisterBatter.forEach((batter, index, arr) => {\n      arr[index] = {\n        ...batter,\n        name: batter.name + \"(Batter\" + index + \")\",\n      };\n    });\n    for (let player of noRegisterBatter) {\n      registerBatter(player);\n    }\n    //\b上傳球員數據\n    for (let player of playerListFromDB) {\n      updatePlayerToFirebase(player);\n    }\n  };\n\n  async function handleGameResultUpdate() {\n    const playerListFromDB = [];\n    await getDocs(query(playersFromDB, orderBy(\"serialNumber\")))\n      .then((queryPlayer) => {\n        queryPlayer.forEach((player) => {\n          playerListFromDB.push({\n            name: player.id,\n            pitcher: player.data().pitcher,\n            batter: player.data().batter,\n          });\n        });\n      })\n      .then(() => updatePlayerData(playerListFromDB));\n  }\n\n  const updatePlayerToFirebase = async (player) => {\n    await updateDoc(doc(playersFromDB, player.name), {\n      pitcher: {\n        strike: player.pitcher.strike,\n        ball: player.pitcher.ball,\n        er: player.pitcher.er,\n        ira: player.pitcher.ira,\n        k: player.pitcher.k,\n        o: player.pitcher.o,\n        goPit: player.pitcher.goPit,\n        aoPit: player.pitcher.aoPit,\n        bbPit: player.pitcher.bbPit,\n        dpPit: player.pitcher.dpPit,\n        h: player.pitcher.h,\n        hr: player.pitcher.hr,\n        gamePlayed: player.pitcher.gamePlayed,\n      },\n      batter: {\n        single: player.batter.single,\n        double: player.batter.double,\n        triple: player.batter.triple,\n        homerun: player.batter.homerun,\n        rbi: player.batter.rbi,\n        runs: player.batter.runs,\n        bb: player.batter.bb,\n        so: player.batter.so,\n        go: player.batter.go,\n        ao: player.batter.ao,\n        dp: player.batter.dp,\n        sf: player.batter.sf,\n        sh: player.batter.sh,\n        gamePlayed: player.batter.gamePlayed,\n      },\n    }).then(() => window.location.reload());\n  };\n\n  const registerPitcher = (player) => {\n    setDoc(doc(playersFromDB, player.name), {\n      serialNumber: player.serialNum,\n      pitcher: {\n        strike: player.strike,\n        ball: player.ball,\n        er: player.er,\n        ira: player.ira,\n        k: player.k,\n        o: player.o,\n        goPit: player.goPit,\n        aoPit: player.aoPit,\n        bbPit: player.bbPit,\n        dpPit: player.dpPit,\n        h: player.h,\n        hr: player.hr,\n        gamePlayed: 1,\n      },\n      batter: {\n        single: 0,\n        double: 0,\n        triple: 0,\n        homerun: 0,\n        rbi: 0,\n        runs: 0,\n        bb: 0,\n        so: 0,\n        go: 0,\n        ao: 0,\n        dp: 0,\n        sf: 0,\n        sh: 0,\n        gamePlayed: 0,\n      },\n    });\n  };\n\n  const registerBatter = (player) => {\n    setDoc(doc(playersFromDB, player.name), {\n      serialNumber: player.serialNum,\n      pitcher: {\n        strike: 0,\n        ball: 0,\n        er: 0,\n        ira: 0,\n        k: 0,\n        o: 0,\n        goPit: 0,\n        aoPit: 0,\n        bbPit: 0,\n        dpPit: 0,\n        h: 0,\n        hr: 0,\n        gamePlayed: 0,\n      },\n      batter: {\n        single: player.single,\n        double: player.double,\n        triple: player.triple,\n        homerun: player.homerun,\n        rbi: player.rbi,\n        runs: player.runs,\n        bb: player.bb,\n        so: player.so,\n        go: player.go,\n        ao: player.ao,\n        dp: player.dp,\n        sf: player.sf,\n        sh: player.sh,\n        gamePlayed: 1,\n      },\n    });\n  };\n\n  return (\n    <GameResultDisplay\n      showGameResult={showGameResult}\n      setShowGameResult={setShowGameResult}\n      handleGameResultUpdate={handleGameResultUpdate}\n    />\n  );\n}\n\nexport default GameResult;\n","import { Container, Row } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Scoreboard.css\";\nimport ScoreboardNav from \"./ScoreboardComponents/ScoreboardNav\";\nimport ScoreboardGameInfo from \"./ScoreboardComponents/ScoreboardGameInfo\";\nimport GamePlayArea from \"./ScoreboardComponents/GamePlayArea\";\nimport TeamInfoArea from \"./ScoreboardComponents/TeamInfoArea\";\nimport GameResult from \"./ScoreboardComponents/GameResult/GameResult\";\nimport { useDispatch } from \"react-redux\";\nimport { setGameEnd } from \"../../store/slice/gameDataSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction Scoreboard() {\n  const dispatch = useDispatch();\n  const gameData = useSelector((state) => state.gameData);\n  const [showGameResult, setShowGameResult] = useState(false);\n  useEffect(() => {\n    if (gameData.lastHalfCheck) {\n      if (gameData.homePoint > gameData.awayPoint) {\n        dispatch(setGameEnd());\n      }\n    }\n  }, [\n    gameData.lastHalfCheck,\n    gameData.homePoint,\n    gameData.awayPoint,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (gameData.gameEnd) {\n      setShowGameResult(true);\n    }\n  }, [gameData.gameEnd]);\n\n  return (\n    <div className=\"scoreboard\">\n      <Container>\n        <ScoreboardNav />\n        <ScoreboardGameInfo />\n        <Row>\n          <GamePlayArea />\n          <TeamInfoArea />\n        </Row>\n      </Container>\n      <GameResult\n        showGameResult={showGameResult}\n        setShowGameResult={setShowGameResult}\n      />\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React, { useState, useEffect } from \"react\";\nimport { getDocs, orderBy, query } from \"firebase/firestore\";\nimport { Container, Table } from \"react-bootstrap\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport playersFromDB from \"../../firebase\";\n\nfunction PitcherDataDisplay() {\n  const [playerList, setPlayerList] = useState();\n\n  useEffect(() => {\n    const playerListFromDB = [];\n    async function gettingFirebasePlayer() {\n      await getDocs(query(playersFromDB, orderBy(\"serialNumber\"))).then(\n        (queryPlayer) => {\n          queryPlayer.forEach((player) => {\n            playerListFromDB.push({\n              name: player.id,\n              serialNum: player.data().serialNumber,\n              pitcher: player.data().pitcher,\n            });\n          });\n        }\n      );\n      setPlayerList(playerListFromDB);\n    }\n    gettingFirebasePlayer();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <h4 className=\"mt-5\">投手數據</h4>\n        {playerList ? (\n          <>\n            <Table striped bordered className=\"mt-3\">\n              <thead>\n                <tr>\n                  <th>背號</th>\n                  <th>姓名</th>\n                  <th>ERA</th>\n                  <th>K/BB</th>\n                  <th>WHIP</th>\n                  <th>OBA</th>\n                  <th>BAA</th>\n                  <th>K/9</th>\n                  <th>H/9</th>\n                  <th>BB/9</th>\n                  <th>Strike%</th>\n                </tr>\n              </thead>\n              <tbody>\n                {playerList.map((pitcher, index) => {\n                  return (\n                    <tr key={\"pitcher\" + index}>\n                      <td>{pitcher.serialNum}</td>\n                      <td>\n                        <Link to={`/Pronball_React/pitcher/${pitcher.name}`}>\n                          {pitcher.name}\n                        </Link>\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.er /\n                            (parseInt(pitcher.pitcher.o / 3) +\n                              (pitcher.pitcher.o % 3) / 10)) *\n                            9 *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.k / pitcher.pitcher.bbPit) * 100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((pitcher.pitcher.h + pitcher.pitcher.bbPit) /\n                            (parseInt(pitcher.pitcher.o / 3) +\n                              (pitcher.pitcher.o % 3) / 10)) *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((pitcher.pitcher.h + pitcher.pitcher.bbPit) /\n                            (pitcher.pitcher.o +\n                              pitcher.pitcher.h +\n                              pitcher.pitcher.bbPit)) *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.h /\n                            (pitcher.pitcher.o +\n                              pitcher.pitcher.h +\n                              pitcher.pitcher.bbPit)) *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.k /\n                            (parseInt(pitcher.pitcher.o / 3) +\n                              (pitcher.pitcher.o % 3) / 10)) *\n                            9 *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.h /\n                            (parseInt(pitcher.pitcher.o / 3) +\n                              (pitcher.pitcher.o % 3) / 10)) *\n                            9 *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (pitcher.pitcher.bbPit /\n                            (parseInt(pitcher.pitcher.o / 3) +\n                              (pitcher.pitcher.o % 3) / 10)) *\n                            9 *\n                            100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {pitcher.pitcher.strike\n                          ? Math.round(\n                              (pitcher.pitcher.strike /\n                                (pitcher.pitcher.strike +\n                                  pitcher.pitcher.ball)) *\n                                100\n                            ) + \"%\"\n                          : 0 + \"%\"}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n            <Outlet />\n          </>\n        ) : (\n          \"loading...\"\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default PitcherDataDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { Table } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\n\nfunction SinglePitcherData() {\n  const [singlePitcher, setSinglePitcher] = useState();\n  let params = useParams();\n  useEffect(() => {\n    const docRef = doc(db, \"Players\", params.pitcherId);\n    const pitcher = [];\n    async function gettingPitcher() {\n      await getDoc(docRef)\n        .then((player) => {\n          pitcher.push({\n            name: player.id,\n            serialNum: player.data().serialNumber,\n            pitcher: player.data().pitcher,\n          });\n        })\n        .catch(() =>\n          pitcher.push({\n            name: \"查無此球員\",\n            serialNum: \"\",\n            pitcher: {},\n          })\n        );\n      setSinglePitcher(pitcher);\n    }\n    gettingPitcher();\n  }, [params.pitcherId]);\n  return (\n    <>\n      <h5 className=\"mt-3\">{params.pitcherId}</h5>\n      {singlePitcher ? (\n        <Table striped bordered className=\"mt-3\">\n          <thead>\n            <tr>\n              <th>背號</th>\n              <th>姓名</th>\n              <th>Game</th>\n              <th>IP</th>\n              <th>H</th>\n              <th>HR</th>\n              <th>ER</th>\n              <th>IRA</th>\n              <th>K</th>\n              <th>BB</th>\n              <th>PC</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{singlePitcher[0].serialNum}</td>\n              <td>{singlePitcher[0].name}</td>\n              <td>{singlePitcher[0].pitcher.gamePlayed}</td>\n              <td>\n                {parseInt(singlePitcher[0].pitcher.o / 3) +\n                  (singlePitcher[0].pitcher.o % 3) / 10 || \"\"}\n              </td>\n              <td>{singlePitcher[0].pitcher.h}</td>\n              <td>{singlePitcher[0].pitcher.hr}</td>\n              <td>{singlePitcher[0].pitcher.er}</td>\n              <td>{singlePitcher[0].pitcher.ira}</td>\n              <td>{singlePitcher[0].pitcher.k}</td>\n              <td>{singlePitcher[0].pitcher.bbPit}</td>\n              <td>\n                {singlePitcher[0].pitcher.strike\n                  ? singlePitcher[0].pitcher.strike +\n                    singlePitcher[0].pitcher.ball +\n                    \"(\" +\n                    singlePitcher[0].pitcher.strike +\n                    \":\" +\n                    singlePitcher[0].pitcher.ball +\n                    \")\"\n                  : \"\"}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default SinglePitcherData;\n","import React, { useState, useEffect } from \"react\";\nimport { getDocs, orderBy, query } from \"firebase/firestore\";\nimport { Container, Table } from \"react-bootstrap\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport playersFromDB from \"../../firebase\";\n\nfunction BatterDataDisplay() {\n  const [playerList, setPlayerList] = useState();\n\n  useEffect(() => {\n    const playerListFromDB = [];\n    async function gettingFirebasePlayer() {\n      await getDocs(query(playersFromDB, orderBy(\"serialNumber\"))).then(\n        (queryPlayer) => {\n          queryPlayer.forEach((player) => {\n            playerListFromDB.push({\n              name: player.id,\n              serialNum: player.data().serialNumber,\n              batter: player.data().batter,\n            });\n          });\n        }\n      );\n      setPlayerList(playerListFromDB);\n    }\n    gettingFirebasePlayer();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <h4 className=\"mt-5\">打者數據</h4>\n        {playerList ? (\n          <>\n            <Table striped bordered className=\"mt-3\">\n              <thead>\n                <tr>\n                  <th>背號</th>\n                  <th>姓名</th>\n                  <th>AVG</th>\n                  <th>OBP</th>\n                  <th>SLG</th>\n                  <th>OPS</th>\n                  <th>GO/AO</th>\n                  <th>HR%</th>\n                  <th>BB%</th>\n                </tr>\n              </thead>\n              <tbody>\n                {playerList.map((batter, index) => {\n                  return (\n                    <tr key={\"batter\" + index}>\n                      <td>{batter.serialNum}</td>\n                      <td>\n                        <Link to={`/Pronball_React/batter/${batter.name}`}>\n                          {batter.name}\n                        </Link>\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((batter.batter.single +\n                            batter.batter.double +\n                            batter.batter.triple +\n                            batter.batter.homerun) /\n                            (batter.batter.single +\n                              batter.batter.double +\n                              batter.batter.triple +\n                              batter.batter.homerun +\n                              batter.batter.so +\n                              batter.batter.go +\n                              batter.batter.ao)) *\n                            1000\n                        ) / 1000 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((batter.batter.single +\n                            batter.batter.double +\n                            batter.batter.triple +\n                            batter.batter.homerun +\n                            batter.batter.bb) /\n                            (batter.batter.single +\n                              batter.batter.double +\n                              batter.batter.triple +\n                              batter.batter.homerun +\n                              batter.batter.so +\n                              batter.batter.go +\n                              batter.batter.ao +\n                              batter.batter.bb +\n                              batter.batter.sf)) *\n                            1000\n                        ) / 1000 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((batter.batter.single +\n                            batter.batter.double * 2 +\n                            batter.batter.triple * 3 +\n                            batter.batter.homerun * 4) /\n                            (batter.batter.single +\n                              batter.batter.double +\n                              batter.batter.triple +\n                              batter.batter.homerun +\n                              batter.batter.so +\n                              batter.batter.go +\n                              batter.batter.ao)) *\n                            1000\n                        ) / 1000 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          ((batter.batter.single +\n                            batter.batter.double +\n                            batter.batter.triple +\n                            batter.batter.homerun +\n                            batter.batter.bb) /\n                            (batter.batter.single +\n                              batter.batter.double +\n                              batter.batter.triple +\n                              batter.batter.homerun +\n                              batter.batter.so +\n                              batter.batter.go +\n                              batter.batter.ao +\n                              batter.batter.bb +\n                              batter.batter.sf) +\n                            (batter.batter.single +\n                              batter.batter.double * 2 +\n                              batter.batter.triple * 3 +\n                              batter.batter.homerun * 4) /\n                              (batter.batter.single +\n                                batter.batter.double +\n                                batter.batter.triple +\n                                batter.batter.homerun +\n                                batter.batter.so +\n                                batter.batter.go +\n                                batter.batter.ao)) *\n                            1000\n                        ) / 1000 || 0}\n                      </td>\n                      <td>\n                        {Math.round(\n                          (batter.batter.go / batter.batter.ao) * 100\n                        ) / 100 || 0}\n                      </td>\n                      <td>\n                        {batter.batter.homerun\n                          ? Math.round(\n                              (batter.batter.homerun /\n                                (batter.batter.single +\n                                  batter.batter.double +\n                                  batter.batter.triple +\n                                  batter.batter.homerun +\n                                  batter.batter.so +\n                                  batter.batter.go +\n                                  batter.batter.ao)) *\n                                100\n                            ) + \"%\"\n                          : 0 + \"%\"}\n                      </td>\n                      <td>\n                        {batter.batter.bb\n                          ? Math.round(\n                              (batter.batter.bb /\n                                (batter.batter.single +\n                                  batter.batter.double +\n                                  batter.batter.triple +\n                                  batter.batter.homerun +\n                                  batter.batter.so +\n                                  batter.batter.go +\n                                  batter.batter.ao)) *\n                                100\n                            ) + \"%\"\n                          : 0 + \"%\"}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n            <Outlet />\n          </>\n        ) : (\n          \"loading...\"\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default BatterDataDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { Table } from \"react-bootstrap\";\nimport { db } from \"../../firebase\";\n\nfunction SingleBatterData() {\n  const [singleBatter, setSingleBatter] = useState();\n  let params = useParams();\n  useEffect(() => {\n    const docRef = doc(db, \"Players\", params.batterId);\n    const batter = [];\n    async function gettingBatter() {\n      await getDoc(docRef)\n        .then((player) => {\n          batter.push({\n            name: player.id,\n            serialNum: player.data().serialNumber,\n            batter: player.data().batter,\n          });\n        })\n        .catch(() =>\n          batter.push({\n            name: \"查無此球員\",\n            serialNum: \"\",\n            batter: {},\n          })\n        );\n      setSingleBatter(batter);\n    }\n    gettingBatter();\n  }, [params.batterId]);\n  return (\n    <>\n      <h5 className=\"mt-3\">{params.batterId}</h5>\n      {singleBatter ? (\n        <Table striped bordered className=\"mt-3\">\n          <thead>\n            <tr>\n              <th>背號</th>\n              <th>姓名</th>\n              <th>Game</th>\n              <th>PA</th>\n              <th>AB</th>\n              <th>R</th>\n              <th>H</th>\n              <th>HR</th>\n              <th>RBI</th>\n              <th>BB</th>\n              <th>SO</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{singleBatter[0].serialNum}</td>\n              <td>{singleBatter[0].name}</td>\n              <td>{singleBatter[0].batter.gamePlayed}</td>\n              <td>\n                {singleBatter[0].batter.single +\n                  singleBatter[0].batter.double +\n                  singleBatter[0].batter.triple +\n                  singleBatter[0].batter.homerun +\n                  singleBatter[0].batter.so +\n                  singleBatter[0].batter.go +\n                  singleBatter[0].batter.ao +\n                  singleBatter[0].batter.bb +\n                  singleBatter[0].batter.sf +\n                  singleBatter[0].batter.sh || \"\"}\n              </td>\n              <td>\n                {singleBatter[0].batter.single +\n                  singleBatter[0].batter.double +\n                  singleBatter[0].batter.triple +\n                  singleBatter[0].batter.homerun +\n                  singleBatter[0].batter.so +\n                  singleBatter[0].batter.go +\n                  singleBatter[0].batter.ao || \"\"}\n              </td>\n              <td>{singleBatter[0].batter.runs}</td>\n              <td>\n                {singleBatter[0].batter.single +\n                  singleBatter[0].batter.double +\n                  singleBatter[0].batter.triple +\n                  singleBatter[0].batter.homerun || \"\"}\n              </td>\n              <td>{singleBatter[0].batter.homerun}</td>\n              <td>{singleBatter[0].batter.rbi}</td>\n              <td>{singleBatter[0].batter.bb}</td>\n              <td>{singleBatter[0].batter.so}</td>\n            </tr>\n          </tbody>\n        </Table>\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default SingleBatterData;\n","import React, { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./bootstrap.min.css\";\nimport \"./App.css\";\nimport WebNavbar from \"./Components/WebNavbar\";\nimport PlayerListInput from \"./Components/PlayerListInput/PlayerListInput\";\nimport Scoreboard from \"./Components/Scoreboard/Scoreboard\";\nimport PitcherDataDisplay from \"./Components/PlayerDataDisplay/PitcherDataDisplay\";\nimport SinglePitcherData from \"./Components/PlayerDataDisplay/SinglePitcherData\";\nimport BatterDataDisplay from \"./Components/PlayerDataDisplay/BatterDataDisplay\";\nimport SingleBatterData from \"./Components/PlayerDataDisplay/SingleBatterData\";\n\nexport default function App() {\n  const [playerListSubmitted, setPlayerListSubmitted] = useState(false);\n\n  return (\n    <>\n      <WebNavbar />\n      <Routes>\n        <Route\n          path=\"/Pronball_React/\"\n          element={\n            !playerListSubmitted ? (\n              <PlayerListInput\n                setPlayerListSubmitted={setPlayerListSubmitted}\n              />\n            ) : (\n              <Scoreboard />\n            )\n          }\n        />\n        <Route path=\"/Pronball_React/pitcher\" element={<PitcherDataDisplay />}>\n          <Route path=\":pitcherId\" element={<SinglePitcherData />} />\n        </Route>\n        <Route path=\"/Pronball_React/batter\" element={<BatterDataDisplay />}>\n          <Route path=\":batterId\" element={<SingleBatterData />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={\n            <main style={{ padding: \"1rem\" }}>\n              <p>There's nothing here!</p>\n            </main>\n          }\n        />\n      </Routes>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport gameDataReducer from \"./slice/gameDataSlice\";\n\nexport default configureStore({\n  reducer: {\n    gameData: gameDataReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}